import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
// import AgoraRTC, { IAgoraRTCClient, ILocalTrack, IRemoteVideoTrack, IRemoteAudioTrack, ILocalVideoTrack, ILocalAudioTrack } from 'agora-rtc-sdk-ng';
// import { WebSocketService } from './web-socket.service';
import { HomeworkService } from './homework.service';


@Injectable({
  providedIn: 'root'
})
export class VideoCallService {
  public showVideoCallSubject = new BehaviorSubject<boolean>(false);
  public isFloatingVideoSubject = new BehaviorSubject<boolean>(false);
  private _videoSize = { width: 640, height: 360 };
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—Ä–æ–∫–∞
  private currentLessonId: string | null = null;
  private currentUserId: string | null = null;
  
  get videoWidth() {
    return this._videoSize.width;
  }
  get videoHeight() {
    return this._videoSize.height;
  }

  showVideoCall$ = this.showVideoCallSubject.asObservable();
  isFloatingVideo$ = this.isFloatingVideoSubject.asObservable();

  floatingVideoPosition = { x: window.innerWidth - 320, y: 20 };
  dragging = false;
  offsetX = 0;
  offsetY = 0;

  // agoraClient: IAgoraRTCClient = AgoraRTC.createClient({ mode: 'rtc', codec: 'vp8' });
  // localTracks: { videoTrack: ILocalVideoTrack | null, audioTrack: ILocalAudioTrack | null } = { videoTrack: null, audioTrack: null };

  // remoteUsers: { [uid: string]: { videoTrack: IRemoteVideoTrack | null, audioTrack: IRemoteAudioTrack | null } } = {};
  // appId = 'a020b374553e4fac80325223fba38531';
  // channelName = 'rtc_token';
  // token = '';
  callActive: boolean = false;
  showControls = false;
  controlTimeout: any; // –û–±—ä—è–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–æ rtmClient
  userId!: string; // –î–æ–±–∞–≤–ª—è–µ–º userId, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç


  // constructor(private wsService: WebSocketService, private homeworkService: HomeworkService) {
  constructor(private homeworkService: HomeworkService) {
    console.log('‚ö° VideoCallService —Å–æ–∑–¥–∞–Ω');
    // this.setupEventListeners();
  }

  // –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö —É—Ä–æ–∫–∞
  setLessonData(lessonId: string, userId: string) {
    this.currentLessonId = lessonId;
    this.currentUserId = userId;
    console.log(`üìö –£—Ä–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: lessonId=${lessonId}, userId=${userId}`);
  }

  startVideoCall(): void {
    console.log('üé• –ó–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');

    this.showVideoCallSubject.next(true);
    console.log('‚úÖ showVideoCall$ –∏–∑–º–µ–Ω—ë–Ω:', this.showVideoCallSubject.getValue());

    // this.joinChannel().then(() => {
    //   console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ –∫–∞–Ω–∞–ª—É!');
      
    //   // –ù–ï –Ω–∞—á–∏–Ω–∞–µ–º —É—Ä–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –∫–∞–Ω–∞–ª—É
    //   // –£—Ä–æ–∫ –Ω–∞—á–Ω–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Ä–µ–∞–ª—å–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –≤–∏–¥–µ–æ
    //   console.log('üìù –£—Ä–æ–∫ –ù–ï –Ω–∞—á–∞—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ - –∂–¥–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ');
    // }).catch(error => {
    //   console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –∫–∞–Ω–∞–ª—É:', error);
    // });
  }

  stopVideoCall(): void {
    console.log('üî¥ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');

    this.showVideoCallSubject.next(false);
    this.isFloatingVideoSubject.next(false);

    console.log('‚úÖ showVideoCall$:', this.showVideoCallSubject.getValue());
    console.log('‚úÖ isFloatingVideo$:', this.isFloatingVideoSubject.getValue());
  }

  toggleFloatingVideo(state: boolean): void {
    console.log(`üü° toggleFloatingVideo(${state}) –≤—ã–∑–≤–∞–Ω`);
    console.log(`üßê –î–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è: isFloatingVideo =`, this.isFloatingVideoSubject.getValue());

    // if (!this.showVideoCallSubject.getValue()) {
    //     console.log('‚ö† –í–∏–¥–µ–æ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –ø–ª–∞–≤–∞—é—â–µ–µ –≤–∏–¥–µ–æ –Ω–µ —Å–æ–∑–¥–∞—ë–º');
    //     return;
    // }

    this.isFloatingVideoSubject.next(state);
    console.log(`üé• toggleFloatingVideo –≤—ã–∑–≤–∞–Ω —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º: ${state}`);
  }

  // ...
  // –í—Å–µ –º–µ—Ç–æ–¥—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å AgoraRTC –∏ WebSocketService, –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω–∏–∂–µ
  // ...
}
