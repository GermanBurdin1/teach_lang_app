import { Component, ElementRef, QueryList, ViewChildren } from '@angular/core';
import { Router } from '@angular/router';

interface WordCard {
  id?: number;
  word: string;
  translation: string;
  galaxy: string;
  subtopic: string;
  type?: 'word' | 'expression';
  createdAt?: number;
}


@Component({
  selector: 'app-words',
  templateUrl: './words.component.html',
  styleUrls: ['./words.component.css']
})
export class WordsComponent {
  @ViewChildren('subtopicElement') subtopicElements!: QueryList<ElementRef>;
  @ViewChildren('galaxyElement') galaxyElements!: QueryList<ElementRef>;
  searchQuery: string = '';
  searchResults: any[] = [];
  zoomStyle = {};
  isZoomingToPlanet = false;
  isZoomingToGalaxy = false;
  focusedGalaxyIndex: number | null = null;

  galaxies = [
    {
      name: '–ö—Ä—É–≥–æ–∑–æ—Ä',
      sanitizedName: '–ö—Ä—É–≥–æ–∑–æ—Ä'.replace(/\s+/g, '-'), // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –¥–ª—è id
      subtopics: this.generateSubtopics(6, ['–ò—Å—Ç–æ—Ä–∏—è', '–ù–∞—É–∫–∞', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–§–∏–ª–æ—Å–æ—Ñ–∏—è', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ö—É–ª—å—Ç—É—Ä–∞'])
    },
    {
      name: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏',
      sanitizedName: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ-—Å–≤—è–∑–∏'.replace(/\s+/g, '-'),
      subtopics: this.generateSubtopics(5, ['–°–µ–º—å—è', '–î—Ä—É–∑—å—è', '–†–∞–±–æ—Ç–∞', '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏', '–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è'])
    },
    {
      name: '–†–∞–±–æ—Ç–∞ –∏ –∫–∞—Ä—å–µ—Ä–∞',
      sanitizedName: '–†–∞–±–æ—Ç–∞-–∏-–∫–∞—Ä—å–µ—Ä–∞'.replace(/\s+/g, '-'),
      subtopics: this.generateSubtopics(4, ['–í–∞–∫–∞–Ω—Å–∏–∏', '–ù–∞–≤—ã–∫–∏', '–†–µ–∑—é–º–µ', '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ'])
    },
    {
      name: '–ü—Ä–µ–¥–º–µ—Ç—ã',
      sanitizedName: '–ü—Ä–µ–¥–º–µ—Ç—ã'.replace(/\s+/g, '-'),
      subtopics: this.generateSubtopics(6, ['–ú–µ–±–µ–ª—å', '–¢–µ—Ö–Ω–∏–∫–∞', '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã', '–û–¥–µ–∂–¥–∞', '–£–∫—Ä–∞—à–µ–Ω–∏—è', '–ò–≥—Ä—É—à–∫–∏'])
    },
    {
      name: '–ú–µ–¥–∏—Ü–∏–Ω–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ',
      sanitizedName: '–ú–µ–¥–∏—Ü–∏–Ω–∞-–∏-–∑–¥–æ—Ä–æ–≤—å–µ'.replace(/\s+/g, '-'),
      subtopics: this.generateSubtopics(5, ['–ë–æ–ª–µ–∑–Ω–∏', '–õ–µ—á–µ–Ω–∏–µ', '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞', '–ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏', '–ê–ø—Ç–µ–∫–∏'])
    },
    {
      name: '–°–∏—Ç—É–∞—Ü–∏–∏ –∏ —Å–æ–±—ã—Ç–∏—è',
      sanitizedName: '–°–∏—Ç—É–∞—Ü–∏–∏-–∏-—Å–æ–±—ã—Ç–∏—è'.replace(/\s+/g, '-'),
      subtopics: this.generateSubtopics(4, ['–ü—Ä–∞–∑–¥–Ω–∏–∫–∏', '–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã', '–°–ø–æ—Ä—Ç', '–ü–æ–ª–∏—Ç–∏–∫–∞'])
    }
  ];
  zoomedGalaxy: any = null;

  constructor(private router: Router) { }

  hoverGalaxy(galaxy: any) {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é
  }

  hoverSubtopic(subtopic: any) {
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
  }

  zoomIntoGalaxy(galaxy: any) {
    this.zoomedGalaxy = galaxy;
    this.isZoomingToPlanet = false; // <-- –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
    this.zoomStyle = {}; // —Å–±—Ä–æ—Å
  }


  resetZoom() {
    this.zoomedGalaxy = null;
    this.zoomStyle = {};
    this.focusedGalaxyIndex = null;

    const galaxyWrappers = document.querySelectorAll('.galaxy-wrapper');
    galaxyWrappers.forEach(el => el.classList.remove('focused'));
  }



  generateSubtopics(count: number, names: string[]) {
    let subtopics = [];
    for (let i = 0; i < count; i++) {
      let angle = (i / count) * Math.PI * 2;
      let x = 100 + Math.cos(angle) * 90; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–¥–∏—É—Å RX —ç–ª–ª–∏–ø—Å–∞
      let y = 100 + Math.sin(angle) * 60; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–¥–∏—É—Å RY —ç–ª–ª–∏–ø—Å–∞

      subtopics.push({
        x,
        y,
        name: names[i]
      });
    }
    return subtopics;
  }



  onSubtopicClick(galaxyName: string, subtopicName: string) {
    this.router.navigate(['/student/wordsTeaching', galaxyName, subtopicName]); // <-- –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–µ–∫
  }

  ////////////////////////////////–ø–æ–∏—Å–∫ —Å–ª–æ–≤

  searchWord() {
    if (!this.searchQuery.trim()) {
      this.searchResults = [];
      return;
    }

    const raw = localStorage.getItem('vocabulary_cards');
    console.log('üì¶ –ò–∑ localStorage:', raw);

    const allWords: WordCard[] = JSON.parse(raw || '[]');
    console.log('üìÑ –í—Å–µ–≥–æ —Å–ª–æ–≤:', allWords.length);

    this.searchResults = allWords
      .filter(card =>
        card.word.toLowerCase().includes(this.searchQuery.toLowerCase()) ||
        card.translation.toLowerCase().includes(this.searchQuery.toLowerCase())
      )
      .map(card => ({
        ...card,
        display: `${card.word} ‚Üí ${card.translation}`,
        fullPath: `${card.subtopic} ‚Üí ${card.galaxy}`
      }));

    console.log('üîé –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:', this.searchResults.length);
  }

  navigateToWord(result: any) {
    const galaxy = this.galaxies.find(g => g.name === result.galaxy);
    if (!galaxy) return;

    const galaxyIndex = this.galaxies.indexOf(galaxy);
    const galaxyElement = this.galaxyElements.get(galaxyIndex)?.nativeElement;

    if (!galaxyElement) return;

    // –£–¥–∞–ª–∏–º –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö
    this.galaxyElements.forEach(el => el.nativeElement.classList.remove('scale-up-galaxy'));

    // –ü—Ä–∏–º–µ–Ω–∏–º –∑—É–º –∫ –Ω—É–∂–Ω–æ–π
    galaxyElement.classList.add('scale-up-galaxy');

    this.isZoomingToGalaxy = true;

    // –®–∞–≥ 1 ‚Äî –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –ø—Ä—è–º–æ –∫ –≥–∞–ª–∞–∫—Ç–∏–∫–µ –≤ SVG
    galaxyElement.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });

    // –®–∞–≥ 2 ‚Äî —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø—Ä–∏–±–ª–∏–∂–∞–µ–º
    setTimeout(() => {
      this.isZoomingToGalaxy = false;
      this.zoomedGalaxy = galaxy;
      this.isZoomingToPlanet = true;

      setTimeout(() => {
        const subtopic = galaxy.subtopics.find(s => s.name === result.subtopic);
        if (!subtopic) return;

        const targetX = subtopic.x * 3;
        const targetY = subtopic.y * 3;
        const offsetX = 300 - targetX;
        const offsetY = 300 - targetY;

        this.zoomStyle = {
          transition: 'transform 2s ease',
          transform: `translate(${offsetX}px, ${offsetY}px) scale(2)`
        };

        setTimeout(() => {
          this.isZoomingToPlanet = false;
          this.onSubtopicClick(galaxy.name, result.subtopic);
        }, 2500);
      }, 200);
    }, 2000);
  }





}
