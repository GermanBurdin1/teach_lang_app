import { Component, OnDestroy, OnInit, HostListener, Output, EventEmitter, Input } from '@angular/core';
import { BackgroundService } from '../../services/background.service';
import { Subscription } from 'rxjs';
import { LessonTabsService } from '../../services/lesson-tabs.service';
import { Router, ActivatedRoute } from '@angular/router';
import { VideoCallService } from '../../services/video-call.service';
import { WebSocketService } from '../../services/web-socket.service';
import { AuthService } from '../../services/auth.service';
import { HomeworkService } from '../../services/homework.service';
import { LessonService } from '../../services/lesson.service';
import { MaterialService } from '../../services/material.service';
import { LessonNotesService } from '../../services/lesson-notes.service';
import { MatDialog } from '@angular/material/dialog';
import { MatSnackBar } from '@angular/material/snack-bar';
import { LessonNotesModalComponent } from './lesson-notes-modal/lesson-notes-modal.component';
import { HomeworkModalComponent } from './homework-modal/homework-modal.component';
import { CreateClassDialogComponent, CreateClassDialogData, CreateClassDialogResult } from './create-class-dialog.component';
import { ExitConfirmationDialogComponent } from './exit-confirmation-dialog.component';
import { GroupClassService,  GroupClass } from '../../services/group-class.service';
import { Meta, Title } from '@angular/platform-browser';
import { AnalyticsService } from '../../services/analytics.service';
import { StructuredDataService } from '../../services/structured-data.service';
import { environment } from '../../../../environment';

@Component({
  selector: 'app-lesson-material',
  templateUrl: './lesson-material.component.html',
  styleUrls: ['./lesson-material.component.css'],
})
export class LessonMaterialComponent implements OnInit, OnDestroy {
  // Helper function for development-only logging
  private devLog(message: string, ...args: unknown[]): void {
    if (!environment.production) {
      console.log(message, ...args);
    }
  }

  // Student-specific properties
  studentClassInfo: any = null;
  teacherInfo: any = null;
  
  // Class invitation properties
  pendingClassInvitations: any[] = [];
  showInvitationDialog = false;
  currentInvitation: any = null;
  hideNotificationUntilReload = false; // –í—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  backgroundStyle: string = '';
  private backgroundSubscription: Subscription | undefined;
  private isVideoCallStarted = false;
  showBoard = false;
  currentLesson: unknown = null;
  userRole: 'student' | 'teacher' = 'student';
  newStudentTask = '';
  newStudentQuestion = '';
  newTeacherTask = '';
  newTeacherQuestion = '';
  hoveredQuestion: string | null = null;
  hoveredItem: string | null = null;
  hoveredPosition: 'above' | 'below' = 'below';
  
  // –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
  lessonTasks: unknown[] = [];
  lessonQuestions: unknown[] = [];
  lessonMaterials: unknown[] = [];
  isLoadingData = false;
  
  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
  homeworkItems: unknown[] = [];
  coveredInClass = new Set<string>();

  @Output() itemResolved = new EventEmitter<{ item: string, type: 'task' | 'question' }>();
  @Input() addHomeworkExternal?: (item: string) => void;

  // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π
  private hideTimeout: ReturnType<typeof setTimeout> | null = null;
  private isHoveringActions = false;

  countdown = 3000; // 3000 —Å–µ–∫—É–Ω–¥
  private countdownInterval: ReturnType<typeof setInterval> | null = null;

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–º
  showClassManagement = false;
  isClassManagementCollapsed = false; // –°–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–∏–¥–µ–æ
  currentClass: GroupClass | null = null;
  allTeacherClasses: GroupClass[] = []; // –í—Å–µ –∫–ª–∞—Å—Å—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  showStudentsList = false;
  availableStudents: { id?: string; name?: string; email?: string; level?: string }[] = []; // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
  selectedLevelFilter: string | null = null; // –§–∏–ª—å—Ç—Ä –ø–æ —É—Ä–æ–≤–Ω—é

  // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Ä–æ–∫–æ–º –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞–º–∏
  lessonStarted = false;
  lessonEnded = false;
  lessonTimer = 30; // 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –¥–µ–º–æ
  private lessonTimerInterval: ReturnType<typeof setInterval> | null = null;
  
  // WebSocket –∏ —É—á–∞—Å—Ç–Ω–∏–∫–∏
  wsConnected = false;
  groupRoomActive = false;
  groupParticipants: string[] = [];
  remoteUsersCount = 0;
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–µ
  studentCallStates: { [studentId: string]: 'calling' | 'connected' | 'declined' } = {};
  connectedStudents: string[] = [];

  constructor(
    private backgroundService: BackgroundService, 
    public lessonTabsService: LessonTabsService, 
    private router: Router, 
    private route: ActivatedRoute, 
    public videoService: VideoCallService,
    private wsService: WebSocketService,
    private authService: AuthService, 
    private homeworkService: HomeworkService,
    private lessonService: LessonService,
    private materialService: MaterialService,
    private lessonNotesService: LessonNotesService,
    private dialog: MatDialog,
    private groupClassService: GroupClassService,
    private meta: Meta,
    private title: Title,
    private analyticsService: AnalyticsService,
    private structuredDataService: StructuredDataService,
    private snackBar: MatSnackBar
  ) { }

  trackByIndex(index: number, item: string): number {
    return index;
  }

  ngOnInit(): void {
    this.devLog('‚úÖ LessonMaterialComponent –∑–∞–≥—Ä—É–∂–µ–Ω');
    this.authService.currentRole$.subscribe(role => {
      if (role === 'student' || role === 'teacher') {
        this.userRole = role;
        this.devLog('üë§ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', role);
        
        // –ï—Å–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–æ–º
        if (role === 'teacher') {
          this.showClassManagement = true;
          this.loadTeacherClasses();
          this.initializeTeacherWebSocketListeners();
        } else if (role === 'student') {
          this.devLog('üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞');
          this.loadStudentClassInfo();
          this.loadUnreadInvitations();
          this.initializeStudentWebSocketListeners();
          // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –≤ –ø–∞–Ω–µ–ª–∏
        }
      }
    });

    this.backgroundSubscription = this.backgroundService.background$.subscribe(
      (newBackground) => {
        this.backgroundStyle = newBackground;
      }
    );

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    this.initializeWebSocket();
    this.initializeVideoTracking();
    this.initializeLessonInvitations();

    this.lessonTabsService.contentView$.subscribe((value) => {
      this.devLog('üîç Observed contentView:', value);
    });

    // –í–ò–î–ï–û-–ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –í–†–ï–ú–ï–ù–ù–û –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–ê
    /*
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∫–ª–∞—Å—Å
    if (this.videoService.getRegularVideoActive()) {
      console.log('üé• –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∫–ª–∞—Å—Å');
      this.videoService.startVideoCall(); // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ
    }

    // –í—ã–∫–ª—é—á–∞–µ–º Floating Video –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∫–ª–∞—Å—Å
    this.videoService.setFloatingVideoActive(false);
    this.videoService.toggleFloatingVideo(false);

    this.route.queryParams.subscribe(params => {
      console.log('üìç –ü–æ–ª—É—á–µ–Ω—ã queryParams:', params);

      if (params['startCall'] === 'true') {
        console.log('üé• –°—Ç–∞—Ä—Ç –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É URL');
        this.videoService.startVideoCall();
      }
    });

    this.videoService.resetVideoSize();
    */

    console.log('üìç ActivatedRoute snapshot:', this.route.snapshot.paramMap.keys);
    console.log('üìç ActivatedRoute param id:', this.route.snapshot.paramMap.get('id'));

    this.route.paramMap.subscribe(async params => {
      console.log('üìç paramMap —Å–æ–¥–µ—Ä–∂–∏—Ç:', params.keys);
      const lessonId = params.get('id');
      if (lessonId) {
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º lessonId: ${lessonId}`);
        this.lessonTabsService.setCurrentLessonId(lessonId);
        this.loadLessonData(lessonId);
        await this.lessonNotesService.initNotesForLesson(lessonId);
      }
    });

    //this.videoService.resetVideoSize(); // TODO –í–ò–î–ï–û-–í–´–ó–û–í–´ –í–†–ï–ú–ï–ù–ù–û –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–´

    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ (—Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ loadLessonData)
    this.lessonTabsService.currentLessonData$.subscribe((lesson) => {
      if (lesson) {
        this.currentLesson = lesson;
        console.log('üéì –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞:', lesson);
        this.updateMetaTags(lesson);
      }
    });
  }

  private updateMetaTags(lesson: unknown): void {
    // Dynamic metadata for SEO and Open Graph (English audience)
    const lessonObj = lesson as { title?: string; description?: string; id?: string };
    const lessonTitle = lessonObj?.title || 'French Lesson';
    const lessonDescription = lessonObj?.description || 'Learn French with our interactive and personalized online courses for DELF and DALF exam preparation';
    const baseUrl = 'https://linguaconnect.com';
    const currentUrl = `${baseUrl}/classroom/${lessonObj?.id || 'lesson'}`;
    
    // Meta Title
    this.title.setTitle(`${lessonTitle} - LINGUACONNECT | Online French DELF/DALF Courses`);
    
    // Meta Description
    this.meta.updateTag({ name: 'description', content: lessonDescription });
    
    // Open Graph Meta Tags
    this.meta.updateTag({ property: 'og:title', content: `${lessonTitle} - LINGUACONNECT` });
    this.meta.updateTag({ property: 'og:description', content: lessonDescription });
    this.meta.updateTag({ property: 'og:type', content: 'website' });
    this.meta.updateTag({ property: 'og:url', content: currentUrl });
    this.meta.updateTag({ property: 'og:image', content: `${baseUrl}/assets/images/lesson-og-image.jpg` });
    this.meta.updateTag({ property: 'og:site_name', content: 'LINGUACONNECT' });
    this.meta.updateTag({ property: 'og:locale', content: 'en_US' });
    
    // Twitter Card Meta Tags
    this.meta.updateTag({ name: 'twitter:card', content: 'summary_large_image' });
    this.meta.updateTag({ name: 'twitter:title', content: `${lessonTitle} - LINGUACONNECT` });
    this.meta.updateTag({ name: 'twitter:description', content: lessonDescription });
    this.meta.updateTag({ name: 'twitter:image', content: `${baseUrl}/assets/images/lesson-og-image.jpg` });
    
    // Additional SEO Meta Tags
    this.meta.updateTag({ name: 'keywords', content: 'french, courses, DELF, DALF, learning, language, teacher, student, online, exam preparation, native speaker' });
    this.meta.updateTag({ name: 'author', content: 'LINGUACONNECT' });
    this.meta.updateTag({ name: 'robots', content: 'index, follow' });
    
    // Canonical URL
    this.meta.updateTag({ rel: 'canonical', href: currentUrl });
    
    console.log('üìä Meta tags updated for lesson:', lessonTitle);
  }

  async loadLessonData(lessonId: string) {
    this.isLoadingData = true;
    console.log('üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ä–æ–∫–∞:', lessonId);
    
    // –ò–°–ü–û–õ–¨–ó–£–ï–ú –î–ê–ù–ù–´–ï –ü–ï–†–ï–î–ê–ù–ù–´–ï –ò–ó LESSON-MANAGEMENT –ß–ï–†–ï–ó LessonTabsService
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞ —É–∂–µ –ø–µ—Ä–µ–¥–∞–Ω—ã —á–µ—Ä–µ–∑ LessonTabsService –∏–∑ lesson-management');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è
    this.loadHomeworkItems(lessonId);
    
    this.isLoadingData = false;
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∏–∑ localStorage
  private loadHomeworkItems(lessonId: string) {
    const savedHomework = localStorage.getItem(`homework_${lessonId}`);
    const savedCovered = localStorage.getItem(`covered_${lessonId}`);
    
    if (savedHomework) {
      this.homeworkItems = JSON.parse(savedHomework);
      console.log('üìã –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è:', this.homeworkItems);
    }
    
    if (savedCovered) {
      this.coveredInClass = new Set(JSON.parse(savedCovered));
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞–¥–∞–Ω–∏—è, —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–µ –≤ –∫–ª–∞—Å—Å–µ:', Array.from(this.coveredInClass));
    }
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –≤ localStorage
  private saveHomeworkItems() {
    const lessonId = this.lessonTabsService.getCurrentLessonId();
    if (lessonId) {
      localStorage.setItem(`homework_${lessonId}`, JSON.stringify(this.homeworkItems));
      localStorage.setItem(`covered_${lessonId}`, JSON.stringify(Array.from(this.coveredInClass)));
      console.log('üíæ –î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ localStorage');
    }
  }

  ngOnDestroy(): void {
    if (this.backgroundSubscription) {
      console.log('üì¢ –û—Ç–ø–∏—Å–∫–∞ –æ—Ç backgroundSubscription');
      this.backgroundSubscription.unsubscribe();
    }

    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (this.hideTimeout) {
      clearTimeout(this.hideTimeout);
      this.hideTimeout = null;
    }

    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä —É—Ä–æ–∫–∞
    if (this.lessonTimerInterval) {
      clearInterval(this.lessonTimerInterval);
      this.lessonTimerInterval = null;
    }

    if (this.countdownInterval) {
      if (this.countdownInterval) clearInterval(this.countdownInterval);
    }

    // ‚ùå –ù–ï –°–ë–†–ê–°–´–í–ê–ï–ú –í–ò–î–ï–û, –ß–¢–û–ë–´ –û–ù–û –ù–ï –ü–†–û–ü–ê–î–ê–õ–û
    console.log(`üé• –ü–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ showVideoCall$ = ${this.videoService.showVideoCallSubject.getValue()}`);
  }

  // —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è
  highlight: string | null = null;

  highlightCard(card: string) {
    this.highlight = card;
  }

  resetCard(card: string) {
    if (this.highlight === card) {
      this.highlight = null;
    }
  }

  //
  showLanguageModal: boolean = false; // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  selectedLanguage: string = ''; // –í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫

  // –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ—Å–∫–∏
  openInteractiveBoard(): void {
    console.log('üîó –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫', `${this.lessonTabsService.getCurrentLessonId()}/board`);
    this.showBoard = true;

    // –í–ò–î–ï–û-–í–´–ó–û–í–´ –í–†–ï–ú–ï–ù–ù–û –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–´
    /*
    this.videoService.setRegularVideoActive(false);
    this.videoService.setFloatingVideoActive(true);
    this.videoService.setFloatingVideoSize(320, 180);
    */
  }


  set showVideoCall(value: boolean) {
    console.log('üîÑ showVideoCall –∏–∑–º–µ–Ω—ë–Ω:', value);
    this._showVideoCall = value;
  }

  get showVideoCall(): boolean {
    return this._showVideoCall;
  }

  private _showVideoCall = false;

  @HostListener('document:mousemove', ['$event'])
  onMouseMove(event: MouseEvent): void {
    // –í–ò–î–ï–û-–í–´–ó–û–í–´ –í–†–ï–ú–ï–ù–ù–û –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–´
    // this.videoService.onResize(event);
  }

  @HostListener('window:popstate', ['$event'])
  onPopState(event: PopStateEvent): void {
    // –ï—Å–ª–∏ –∏–¥–µ—Ç –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    if (this.lessonStarted) {
      event.preventDefault();
      this.showExitConfirmation();
    }
  }

  startDrag(event: MouseEvent): void {
    // –í–ò–î–ï–û-–í–´–ó–û–í–´ –í–†–ï–ú–ï–ù–ù–û –ó–ê–ö–û–ú–ú–ï–ù–¢–ò–†–û–í–ê–ù–´
    // this.videoService.startResize(event);
  }

  showGabarit = false;

  toggleGabarit(): void {
    this.showGabarit = !this.showGabarit;
    if (this.showGabarit) {
      this.showBoard = false;
      this.showClassManagement = false; // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º
    }
  }

  selectView(view: 'board' | 'materials') {
    if (view === 'board') {
      this.showBoard = true;
      this.showGabarit = false;
      this.showClassManagement = false;
    } else {
      this.showBoard = false;
      this.showGabarit = true;
      this.showClassManagement = false;
    }
  }

  tasksCollapsed = false;

  toggleTasksCollapsed() {
    this.tasksCollapsed = !this.tasksCollapsed;
  }

  toggleBoard(): void {
    this.showBoard = !this.showBoard;
    if (this.showBoard) {
      this.showGabarit = false;
      this.showClassManagement = false; // –°–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º
    }
  }

  resolvedItems = new Set<string>();

  toggleResolved(item: string, type: 'task' | 'question') {
    if (this.resolvedItems.has(item)) {
      this.resolvedItems.delete(item);
    } else {
      this.resolvedItems.add(item);
    }

    this.itemResolved.emit({ item, type });
  }

  isResolved(item: string): boolean {
    return this.resolvedItems.has(item);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
  isAddedToHomework(itemId: string): boolean {
    return this.homeworkItems.some(item => (item as { itemId?: string }).itemId === itemId);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞, —Ä–∞–∑–æ–±—Ä–∞–Ω–æ –ª–∏ –∑–∞–¥–∞–Ω–∏–µ –≤ –∫–ª–∞—Å—Å–µ
  isCoveredInClass(itemId: string): boolean {
    return this.coveredInClass.has(itemId);
  }

  addStudentTask() {
    if (this.newStudentTask.trim() && this.currentLesson) {
      const currentUser = this.authService.getCurrentUser();
      if (!currentUser) return;

      const lessonId = (this.currentLesson as { id?: string }).id;
      if (!lessonId) return;

      const taskData = {
        lessonId,
        title: this.newStudentTask.trim(),
        description: null,
        createdBy: currentUser.id,
        createdByRole: 'student' as const
      };

      this.lessonService.addTaskToLesson(taskData).subscribe({
        next: (newTask) => {
          const lesson = this.currentLesson as { studentTasks?: unknown[] };
          if (!lesson.studentTasks) {
            lesson.studentTasks = [];
          }
          lesson.studentTasks.push(newTask);
          console.log('‚úÖ –ó–∞–¥–∞—á–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ë–î:', newTask);
          console.log('studentTasks –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', lesson.studentTasks);
          this.newStudentTask = '';
        },
        error: (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞:', error);
        }
      });
    }
  }

  addStudentQuestion() {
    if (this.newStudentQuestion.trim() && this.currentLesson) {
      const currentUser = this.authService.getCurrentUser();
      if (!currentUser) return;

      const lessonId = (this.currentLesson as { id?: string }).id;
      if (!lessonId) return;

      const questionData = {
        lessonId,
        question: this.newStudentQuestion.trim(),
        createdBy: currentUser.id,
        createdByRole: 'student' as const
      };

      this.lessonService.addQuestionToLesson(questionData).subscribe({
        next: (newQuestion) => {
          if (this.currentLesson) {
            // –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
            const lesson = this.currentLesson as { studentQuestions?: unknown[] };
            if (!lesson.studentQuestions) {
              lesson.studentQuestions = [];
            }
            lesson.studentQuestions.push(newQuestion);
          }
          this.newStudentQuestion = '';
          console.log('‚úÖ –í–æ–ø—Ä–æ—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î:', newQuestion);
        },
        error: (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞:', error);
        }
      });
    }
  }

  addTeacherTask() {
    if (this.newTeacherTask.trim() && this.currentLesson) {
      const currentUser = this.authService.getCurrentUser();
      if (!currentUser) return;

      const lessonId = (this.currentLesson as { id?: string }).id;
      if (!lessonId) return;

      const taskData = {
        lessonId,
        title: this.newTeacherTask.trim(),
        description: null,
        createdBy: currentUser.id,
        createdByRole: 'teacher' as const
      };

      this.lessonService.addTaskToLesson(taskData).subscribe({
        next: (newTask) => {
          if (this.currentLesson) {
            const lesson = this.currentLesson as { teacherTasks?: unknown[] };
            if (!lesson.teacherTasks) {
              lesson.teacherTasks = [];
            }
            lesson.teacherTasks.push(newTask);
          }
          this.newTeacherTask = '';
          console.log('‚úÖ –ó–∞–¥–∞—á–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –ë–î:', newTask);
        },
        error: (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', error);
        }
      });
    }
  }

  addTeacherQuestion() {
    if (this.newTeacherQuestion.trim() && this.currentLesson) {
      const currentUser = this.authService.getCurrentUser();
      if (!currentUser) return;

      const lessonId = (this.currentLesson as { id?: string }).id;
      if (!lessonId) return;

      const questionData = {
        lessonId,
        question: this.newTeacherQuestion.trim(),
        createdBy: currentUser.id,
        createdByRole: 'teacher' as const
      };

      this.lessonService.addQuestionToLesson(questionData).subscribe({
        next: (newQuestion) => {
          if (this.currentLesson) {
            const lesson = this.currentLesson as { teacherQuestions?: unknown[] };
            if (!lesson.teacherQuestions) {
              lesson.teacherQuestions = [];
            }
            lesson.teacherQuestions.push(newQuestion);
          }
          this.newTeacherQuestion = '';
          console.log('‚úÖ –í–æ–ø—Ä–æ—Å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ë–î:', newQuestion);
        },
        error: (error) => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:', error);
        }
      });
    }
  }

  // –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–º
  openNotes(section: 'tasks' | 'questions' | 'materials', itemId: string, itemText: string) {
    const dialogRef = this.dialog.open(LessonNotesModalComponent, {
      width: '900px',
      maxWidth: '95vw',
      data: {
        lessonId: this.lessonTabsService.getCurrentLessonId(),
        section,
        itemId,
        itemText,
        lessonData: {
          studentTasks: (this.currentLesson as { studentTasks?: unknown[] })?.studentTasks || [],
          teacherTasks: (this.currentLesson as { teacherTasks?: unknown[] })?.teacherTasks || [],
          studentQuestions: (this.currentLesson as { studentQuestions?: unknown[] })?.studentQuestions || [],
          teacherQuestions: (this.currentLesson as { teacherQuestions?: unknown[] })?.teacherQuestions || [],
          materials: (this.currentLesson as { materials?: unknown[] })?.materials || []
        }
      }
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result) {
        console.log('üìù –ö–æ–Ω—Å–ø–µ–∫—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', result);
      }
    });
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç gabarit-page
  onGabaritOpenNotes(event: {section: 'materials', itemId: string, itemText: string}) {
    this.openNotes(event.section, event.itemId, event.itemText);
  }

  onGabaritAddToHomework(event: {type: string, materialTitle: string, materialId: string}) {
    this.addToHomework('material', event.materialTitle, event.materialId);
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
  addToHomework(type: 'task' | 'question' | 'material', title: string, itemId: string) {
    const dialogRef = this.dialog.open(HomeworkModalComponent, {
      width: '700px',
      maxWidth: '90vw',
      data: {
        type,
        title,
        itemId
      }
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result) {
        console.log('üìã –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', result);
        
        const currentUser = this.authService.getCurrentUser();
        const lessonId = this.lessonTabsService.getCurrentLessonId();
        
        if (!currentUser || !lessonId) {
          console.error('‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —É—Ä–æ–∫–∞');
          return;
        }

        // –°–æ–∑–¥–∞–µ–º –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å
        const homeworkData = {
          lessonId: lessonId,
          title: result.title || title,
          description: result.description || '',
          dueDate: result.dueDate ? new Date(result.dueDate) : new Date(),
          assignedBy: currentUser.id,
          assignedTo: (this.currentLesson as { studentId?: string })?.studentId || currentUser.id,
          sourceType: type,
          sourceItemId: itemId,
          sourceItemText: title,
          materialIds: type === 'material' ? [itemId] : []
        };

        this.homeworkService.createHomeworkFromLesson(homeworkData).subscribe({
          next: (homework) => {
            console.log('‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ë–î:', homework);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            const homeworkItem = {
              id: homework.id || Date.now().toString(),
              type,
              title: homework.title || title,
              description: homework.description || '',
              dueDate: homework.dueDate || new Date().toISOString(),
              status: homework.status || 'unfinished',
              itemId,
              createdAt: homework.assignedAt ? homework.assignedAt.toString() : new Date().toISOString(),
              lessonId: homework.lessonId || lessonId,
              createdInClass: homework.createdInClass !== undefined ? homework.createdInClass : true
            };
            
            this.homeworkItems.push(homeworkItem);
            
            // –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–µ –≤ –∫–ª–∞—Å—Å–µ –µ—Å–ª–∏ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ/–≤–æ–ø—Ä–æ—Å
            if (type === 'task' || type === 'question') {
              this.coveredInClass.add(itemId);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            this.saveHomeworkItems();
            
            console.log('‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ:', homeworkItem);
          },
          error: (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è:', error);
            
            // Fallback: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
            const homeworkItem = {
              id: Date.now().toString(),
              type,
              title: result.title || title,
              description: result.description || '',
              dueDate: result.dueDate || new Date().toISOString(),
              status: 'unfinished',
              itemId,
              createdAt: new Date().toISOString(),
              lessonId: lessonId,
              createdInClass: true
            };
            
            this.homeworkItems.push(homeworkItem);
            this.coveredInClass.add(itemId);
            this.saveHomeworkItems();
          }
        });
      }
    });
  }

  // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –±—É–¥—É—â–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
  postponeQuestion(question: string): void {
    console.log('‚è≠ –ü–µ—Ä–µ–Ω–æ—Å–∏–º –≤–æ–ø—Ä–æ—Å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫:', question);
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
  }

  goToMindmap(item: string) {
    console.log('üß† –ü–µ—Ä–µ—Ö–æ–¥ –∫ mindmap –¥–ª—è:', item);
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∫ mindmap
    // this.router.navigate(['/mindmap'], { queryParams: { item: item } });
  }

  goToDictionary(item: string) {
    console.log('üìò –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–æ–≤–∞—Ä—é –¥–ª—è:', item);
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–æ–≤–∞—Ä—é
    // this.router.navigate(['/vocabulary'], { queryParams: { search: item } });
  }

  postpone(item: string): void {
    console.log('‚è≠ –ü–µ—Ä–µ–Ω–æ—Å–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫:', item);
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–Ω–æ—Å –∑–∞–¥–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫
  }

  onHover(item: string, event: MouseEvent) {
    // –û—Ç–º–µ–Ω—è–µ–º –ª—é–±–æ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è
    if (this.hideTimeout) {
      clearTimeout(this.hideTimeout);
      this.hideTimeout = null;
    }
    
    this.hoveredItem = item;
    const rect = (event.target as HTMLElement).getBoundingClientRect();
    const windowHeight = window.innerHeight;
    this.hoveredPosition = rect.bottom + 200 > windowHeight ? 'above' : 'below';
  }

  onLeaveItem() {
    // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º –∫–Ω–æ–ø–æ–∫
    this.hideTimeout = setTimeout(() => {
      if (!this.isHoveringActions) {
        this.hoveredItem = null;
      }
    }, 300); // 300ms –∑–∞–¥–µ—Ä–∂–∫–∞
  }

  onEnterActions() {
    // –û—Ç–º–µ–Ω—è–µ–º —Å–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
    this.isHoveringActions = true;
    if (this.hideTimeout) {
      clearTimeout(this.hideTimeout);
      this.hideTimeout = null;
    }
  }

  onLeaveActions() {
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å –Ω–∏—Ö
    this.isHoveringActions = false;
    this.hideTimeout = setTimeout(() => {
      this.hoveredItem = null;
    }, 100); // –ë–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å –∫–Ω–æ–ø–æ–∫
  }

  getMaterialIcon(materialType: string): string {
    switch (materialType) {
      case 'text': return 'üìÑ';
      case 'audio': return 'üéß';
      case 'video': return 'üé¨';
      case 'pdf': return 'üìî';
      case 'image': return 'üñºÔ∏è';
      default: return 'üìé';
    }
  }

  getStudentMaterials(): unknown[] {
    const lesson = this.currentLesson as { materials?: unknown[]; studentId?: string };
    if (!lesson?.materials) return [];
    return lesson.materials.filter((m: unknown) => (m as { createdBy?: string }).createdBy === lesson?.studentId);
  }

  getTeacherMaterials(): unknown[] {
    const lesson = this.currentLesson as { materials?: unknown[]; teacherId?: string };
    if (!lesson?.materials) return [];
    return lesson.materials.filter((m: unknown) => (m as { createdBy?: string }).createdBy === lesson?.teacherId);
  }

  newHomeworkEntry = '';

  submitHomework(): void {
    if (this.newHomeworkEntry.trim()) {
      const lesson = this.currentLesson as { homework?: unknown[] };
      if (!lesson.homework) lesson.homework = [];
      lesson.homework.push(this.newHomeworkEntry.trim());
      this.newHomeworkEntry = '';
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç gabarit-page


  // –û—Ç–º–µ—Ç–∫–∞ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ
  markHomeworkAsCompleted(homeworkId: string) {
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      console.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }

    this.homeworkService.completeHomeworkItem(homeworkId, currentUser.id).subscribe({
      next: (completedHomework) => {
        console.log('‚úÖ –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ:', completedHomework);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        const homeworkIndex = this.homeworkItems.findIndex(item => (item as { id?: string }).id === homeworkId);
        if (homeworkIndex >= 0) {
          const homeworkItem = this.homeworkItems[homeworkIndex] as { status?: string; isCompleted?: boolean; completedAt?: string };
          homeworkItem.status = 'finished';
          homeworkItem.isCompleted = true;
          homeworkItem.completedAt = new Date().toISOString();
          this.saveHomeworkItems();
        }
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ:', error);
      }
    });
  }

  // –û—Ç–º–µ—Ç–∫–∞ –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π
  markTaskAsCompleted(taskId: string) {
    console.log('üü¢ markTaskAsCompleted –≤—ã–∑–≤–∞–Ω —Å:', taskId);
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      console.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }
    this.homeworkService.completeTask(taskId, currentUser.id).subscribe({
      next: (completedTask) => {
        console.log('‚úÖ –ó–∞–¥–∞—á–∞ –æ—Ç–º–µ—á–µ–Ω–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–∞—è:', completedTask);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        this.resolvedItems.add(taskId);
        
        // –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–¥–∞—á–∞ –∏–∑ –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è, –æ–±–Ω–æ–≤–ª—è–µ–º –∏ –µ—ë
        const relatedHomework = this.homeworkItems.find(item => {
          const itemObj = item as { itemId?: string; type?: string };
          return itemObj.itemId === taskId && itemObj.type === 'task';
        });
        if (relatedHomework) {
          const homeworkObj = relatedHomework as { status?: string; isCompleted?: boolean; completedAt?: string };
          homeworkObj.status = 'finished';
          homeworkObj.isCompleted = true;
          homeworkObj.completedAt = new Date().toISOString();
          this.saveHomeworkItems();
        }
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –∑–∞–¥–∞—á–∏ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π:', error);
      }
    });
  }

  // –û—Ç–º–µ—Ç–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ
  markQuestionAsCompleted(questionId: string) {
    console.log('üü£ markQuestionAsCompleted –≤—ã–∑–≤–∞–Ω —Å:', questionId);
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      console.error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
      return;
    }
    this.homeworkService.completeQuestion(questionId, currentUser.id).subscribe({
      next: (completedQuestion) => {
        console.log('‚úÖ –í–æ–ø—Ä–æ—Å –æ—Ç–º–µ—á–µ–Ω –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π:', completedQuestion);
        this.resolvedItems.add(questionId);
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ:', error);
      }
    });
  }

  // Force recompilation - angular cache fix

  // –ú–µ—Ç–æ–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º
  toggleClassManagement(): void {
    this.showClassManagement = !this.showClassManagement;
    if (this.showClassManagement) {
      this.showBoard = false;
      this.showGabarit = false;
    }
  }

  openCreateClassDialog(): void {
    console.log('üìù Ouverture du dialogue de cr√©ation de classe');
    
    const teacherId = this.authService.getCurrentUser()?.id;
    if (!teacherId) {
      alert('Erreur: utilisateur non authentifi√©');
      return;
    }

    const dialogData: CreateClassDialogData = {
      teacherId: teacherId
    };

    const dialogRef = this.dialog.open(CreateClassDialogComponent, {
      width: '600px',
      maxWidth: '90vw',
      data: dialogData,
      disableClose: false,
      autoFocus: true,
      panelClass: 'create-class-dialog-panel'
    });

    dialogRef.afterClosed().subscribe((result: CreateClassDialogResult) => {
      if (result?.success && result.createdClass) {
        this.devLog('‚úÖ Classe cr√©√©e avec succ√®s:', result.createdClass);
        this.currentClass = result.createdClass;
        
        // üîë GA4: Track lesson booking event
        this.analyticsService.trackLessonBooking(
          result.createdClass.id,
          result.createdClass.teacherId,
          99, // Example price
          'EUR'
        );
        
        // üìä Structured Data: Generate course schema
        const courseSchema = this.structuredDataService.generateCourseSchema({
          title: result.createdClass.name,
          description: result.createdClass.description,
          level: result.createdClass.level,
          price: 99
        });
        this.structuredDataService.injectStructuredData(courseSchema);
        
        // Sauvegarder dans localStorage pour compatibilit√©
        this.saveClassToStorage();
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–ª–∞—Å—Å–æ–≤
        this.loadTeacherClasses();
      } else if (result?.error) {
        console.error('‚ùå Erreur lors de la cr√©ation de la classe:', result.error);
        alert(result.error);
      }
    });
  }

  loadTeacherClasses(): void {
    const teacherId = this.authService.getCurrentUser()?.id;
    if (!teacherId) return;
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∞—Å—Å—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Å –±–µ–∫–µ–Ω–¥–∞
    this.groupClassService.getTeacherGroupClasses(teacherId).subscribe({
      next: (classes: GroupClass[]) => {
        this.devLog('üìö –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–ª–∞—Å—Å—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —Å –±–µ–∫–µ–Ω–¥–∞:', classes);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã
        this.allTeacherClasses = classes;
        
        // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫–∞–∫ —Ç–µ–∫—É—â–∏–π
        this.currentClass = classes.find((cls: GroupClass) => cls.status === 'active') || null;
        
        // –¢–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        localStorage.setItem(`teacher_classes_${teacherId}`, JSON.stringify(classes));
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ lessons –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ –∫–ª–∞—Å—Å–∞–º
        this.loadStudentsForClasses(teacherId);
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–ª–∞—Å—Å–æ–≤ —Å –±–µ–∫–µ–Ω–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage:', error);
        
        // Fallback –Ω–∞ localStorage
        const savedClasses = localStorage.getItem(`teacher_classes_${teacherId}`);
        if (savedClasses) {
          const classes: GroupClass[] = JSON.parse(savedClasses);
          this.allTeacherClasses = classes;
          this.currentClass = classes.find((cls: GroupClass) => cls.status === 'active') || null;
          this.devLog('üìö –ó–∞–≥—Ä—É–∂–µ–Ω—ã –∫–ª–∞—Å—Å—ã –∏–∑ localStorage:', classes);
          
          // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ lessons –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –∫ –∫–ª–∞—Å—Å–∞–º
          this.loadStudentsForClasses(teacherId);
        }
      }
    });
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ group_class_students –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞
   */
  loadStudentsForClasses(teacherId: string): void {
    this.devLog('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ group_class_students –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞...');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∞—Å—Å–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
    this.allTeacherClasses.forEach(cls => {
      this.devLog(`üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –∫–ª–∞—Å—Å–∞ ${cls.name} (${cls.id})`);
      
      // –ó–¥–µ—Å—å –º—ã –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, 
      // –∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–≥—Ä—É–∂–∞–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
      this.devLog(`‚úÖ –ö–ª–∞—Å—Å ${cls.name} —É–∂–µ –∏–º–µ–µ—Ç ${cls.students?.length || 0} —Å—Ç—É–¥–µ–Ω—Ç–æ–≤`);
    });
  }

  /**
   * –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –∫–ª–∞—Å—Å–∞—Ö (–º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ teacher-overview)
   */
  refreshStudentsInClasses(): void {
    const teacherId = this.authService.getCurrentUser()?.id;
    if (teacherId) {
      this.devLog('üîÑ –†—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –∫–ª–∞—Å—Å–∞—Ö...');
      this.loadStudentsForClasses(teacherId);
    }
  }

  saveClassToStorage(): void {
    const teacherId = this.authService.getCurrentUser()?.id;
    if (!teacherId || !this.currentClass) return;
    
    const savedClasses = localStorage.getItem(`teacher_classes_${teacherId}`);
    const classes: GroupClass[] = savedClasses ? JSON.parse(savedClasses) : [];
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª–∞—Å—Å –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π
    const existingIndex = classes.findIndex((cls: GroupClass) => cls.id === this.currentClass?.id);
    if (existingIndex >= 0) {
      classes[existingIndex] = this.currentClass;
    } else {
      classes.push(this.currentClass);
    }
    
    localStorage.setItem(`teacher_classes_${teacherId}`, JSON.stringify(classes));
    this.devLog('üíæ –ö–ª–∞—Å—Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ localStorage');
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞—Å—Å–∞–º–∏
  getFilteredClasses(): GroupClass[] {
    if (!this.selectedLevelFilter) {
      return this.allTeacherClasses;
    }
    return this.allTeacherClasses.filter(cls => cls.level === this.selectedLevelFilter);
  }

  getClassesByLevel(level: string): GroupClass[] {
    return this.allTeacherClasses.filter(cls => cls.level === level);
  }

  getLevelStats(): { level: string; count: number; color: string }[] {
    const levels = ['A1', 'A2', 'B1', 'B2', 'C1', 'C2'];
    const colors = {
      'A1': '#ff6b6b', // –ö—Ä–∞—Å–Ω—ã–π
      'A2': '#ffa726', // –û—Ä–∞–Ω–∂–µ–≤—ã–π
      'B1': '#66bb6a', // –ó–µ–ª–µ–Ω—ã–π
      'B2': '#42a5f5', // –°–∏–Ω–∏–π
      'C1': '#ab47bc', // –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
      'C2': '#26a69a'  // –ë–∏—Ä—é–∑–æ–≤—ã–π
    };

    return levels.map(level => ({
      level,
      count: this.getClassesByLevel(level).length,
      color: colors[level as keyof typeof colors]
    }));
  }

  setLevelFilter(level: string | null): void {
    this.selectedLevelFilter = level;
  }

  selectClass(cls: GroupClass): void {
    this.currentClass = cls;
  }

  getClassStatusColor(status: string): string {
    switch (status) {
      case 'active': return '#4caf50'; // –ó–µ–ª–µ–Ω—ã–π
      case 'completed': return '#2196f3'; // –°–∏–Ω–∏–π
      case 'cancelled': return '#f44336'; // –ö—Ä–∞—Å–Ω—ã–π
      default: return '#9e9e9e'; // –°–µ—Ä—ã–π
    }
  }

  getClassStatusText(status: string): string {
    switch (status) {
      case 'active': return 'Actif';
      case 'completed': return 'Termin√©';
      case 'cancelled': return 'Annul√©';
      default: return 'Inconnu';
    }
  }

  formatScheduledDate(dateInput: string | Date): string {
    const date = typeof dateInput === 'string' ? new Date(dateInput) : dateInput;
    return date.toLocaleDateString('fr-FR', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  }

  getLevelColor(level: string | null): string {
    if (!level) return '#9e9e9e';
    const levelStats = this.getLevelStats();
    const stat = levelStats.find(s => s.level === level);
    return stat?.color || '#9e9e9e';
  }

  removeStudentFromClass(student: any): void {
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –∫–ª–∞—Å—Å–∞:', student);
    console.log('üóëÔ∏è currentClass.students:', this.currentClass?.students);
    
    if (!this.currentClass || !this.currentClass.id) {
      alert('–ö–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const studentId = student.studentId || student.id;
    console.log('üóëÔ∏è studentId –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', studentId);
    if (!studentId) {
      alert('ID —Å—Ç—É–¥–µ–Ω—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –£–¥–∞–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ API
    this.groupClassService.removeStudentFromClass(this.currentClass.id, studentId).subscribe({
      next: () => {
        console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫–ª–∞—Å—Å–∞');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (this.currentClass && this.currentClass.students) {
          const index = this.currentClass.students.findIndex(s => 
            s.id === studentId || s.studentId === studentId
          );
          if (index > -1) {
            this.currentClass.students.splice(index, 1);
            this.saveClassToStorage(); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ localStorage
            console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞');
          } else {
            console.log('‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
          }
        }
      },
      error: (error) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞:', error);
        
        // –î–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ –±–µ–∫–µ–Ω–¥–µ, —É–¥–∞–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –ª–æ–∫–∞–ª—å–Ω–æ
        if (this.currentClass && this.currentClass.students) {
          const index = this.currentClass.students.findIndex(s => 
            s.id === studentId || s.studentId === studentId
          );
          if (index > -1) {
            this.currentClass.students.splice(index, 1);
            this.saveClassToStorage();
            console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (–Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É –±–µ–∫–µ–Ω–¥–∞)');
          }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
        this.snackBar.open('–°—Ç—É–¥–µ–Ω—Ç —É–¥–∞–ª–µ–Ω –∏–∑ –∫–ª–∞—Å—Å–∞', 'Fermer', { duration: 3000 });
      }
    });
  }

  testButtonClick(): void {
    this.devLog('üîò BUTTON CLICKED!');
    this.openInviteStudentsDialog();
  }

  openInviteStudentsDialog(): void {
    this.devLog('üë• –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
    this.devLog('üîç currentClass:', this.currentClass);
    
    if (!this.currentClass) {
      this.devLog('‚ùå currentClass –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å!');
      return;
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    this.loadAvailableStudents();
    this.showStudentsList = true;
  }

  loadAvailableStudents(): void {
    this.devLog('üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤...');
    
    const teacherId = this.authService.getCurrentUser()?.id;
    this.devLog('üîç Teacher ID:', teacherId);
    
    if (!teacherId) {
      this.devLog('‚ùå ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }
    
    this.devLog('üì° –í—ã–∑—ã–≤–∞–µ–º lessonService.getConfirmedStudentsForTeacher...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ –±—ç–∫–µ–Ω–¥–∞
    this.lessonService.getConfirmedStudentsForTeacher(teacherId).subscribe({
      next: (students) => {
        this.devLog('üìö –ü–æ–ª—É—á–µ–Ω—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã —Å –±—ç–∫–µ–Ω–¥–∞:', students);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ email –∞–¥—Ä–µ—Å–∞
        this.availableStudents = [];
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º email –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞
        students.forEach((student: unknown) => {
          const studentData = student as { 
            id?: string; 
            name?: string; 
            email?: string; 
            level?: string;
            studentId?: string;
          };
          
          const studentId = studentData.studentId || studentData.id;
          if (studentId) {
            // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–π email —á–µ—Ä–µ–∑ authService
            this.authService.getUserEmail(studentId).subscribe({
              next: (emailInfo) => {
                const studentInfo = {
                  id: studentId,
                  name: studentData.name || '–°—Ç—É–¥–µ–Ω—Ç –±–µ–∑ –∏–º–µ–Ω–∏',
                  email: emailInfo.email, // –†–µ–∞–ª—å–Ω—ã–π email
                  level: studentData.level || 'B1'
                };
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ —ç—Ç–æ—Ç —Å—Ç—É–¥–µ–Ω—Ç –∏ –Ω–µ –≤ —Ç–µ–∫—É—â–µ–º –∫–ª–∞—Å—Å–µ
                if (!this.availableStudents.find(s => s.id === studentId)) {
                  // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤ —Ç–µ–∫—É—â–µ–º –∫–ª–∞—Å—Å–µ
                  if (!this.currentClass?.students?.find(s => (s as { studentId?: string }).studentId === studentId)) {
                    this.availableStudents.push(studentInfo);
                  }
                }
              },
              error: (error) => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è email –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞:', studentId, error);
                // Fallback –Ω–∞ –∑–∞–≥–ª—É—à–∫—É
                const studentInfo = {
                  id: studentId,
                  name: studentData.name || '–°—Ç—É–¥–µ–Ω—Ç –±–µ–∑ –∏–º–µ–Ω–∏',
                  email: 'email@example.com',
                  level: studentData.level || 'B1'
                };
                
                if (!this.availableStudents.find(s => s.id === studentId)) {
                  // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤ —Ç–µ–∫—É—â–µ–º –∫–ª–∞—Å—Å–µ
                  if (!this.currentClass?.students?.find(s => (s as { studentId?: string }).studentId === studentId)) {
                    this.availableStudents.push(studentInfo);
                  }
                }
              }
            });
          }
        });
        
        this.devLog('‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ email –∞–¥—Ä–µ—Å–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞');
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å –±—ç–∫–µ–Ω–¥–∞:', error);
        this.devLog('‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.status, error.message);
        
        // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –æ—à–∏–±–∫–µ
        this.availableStudents = [
          { id: 'student1', name: 'Alice Dupont', email: 'alice@example.com', level: 'B1' },
          { id: 'student2', name: 'Bob Martin', email: 'bob@example.com', level: 'A2' },
          { id: 'student3', name: 'Claire Dubois', email: 'claire@example.com', level: 'B2' },
          { id: 'student4', name: 'David Leroy', email: 'david@example.com', level: 'A1' },
          { id: 'student5', name: 'Emma Rousseau', email: 'emma@example.com', level: 'C1' },
        ];
        
        this.devLog('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏');
      }
    });
  }

  addStudentToClass(student: unknown): void {
    this.devLog('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫–ª–∞—Å—Å:', student);
    this.devLog('‚ûï currentClass:', this.currentClass);
    
    if (!this.currentClass || !this.currentClass.id) {
      this.devLog('‚ùå –ö–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      alert('‚ùå –ö–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const studentObj = student as { id?: string; name?: string; studentId?: string };
    const studentId = studentObj.id || studentObj.studentId;
    const studentName = studentObj.name;
    
    this.devLog('‚ûï studentId:', studentId, 'studentName:', studentName);
    
    if (!studentId || !studentName) {
      this.devLog('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ!');
      alert('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç—É–¥–µ–Ω—Ç–µ');
      return;
    }

    const addStudentDto = {
      groupClassId: this.currentClass.id,
      studentId: studentId,
      studentName: studentName
    };

    this.devLog('‚ûï –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—É:', addStudentDto);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—É —á–µ—Ä–µ–∑ WebSocket
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      alert('‚ùå –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∞—Å—Å–∞ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    const classData = {
      id: this.currentClass.id,
      name: this.currentClass.name,
      level: this.currentClass.level,
      description: this.currentClass.description || `Classe de pr√©paration √† l'examen DELF niveau ${this.currentClass.level}`,
      teacherName: currentUser.name || 'Professeur'
    };

    // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    this.groupClassService.addStudentToClass(addStudentDto).subscribe({
      next: (addedStudent) => {
        this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–ª–∞—Å—Å –Ω–∞ –±–µ–∫–µ–Ω–¥–µ:', addedStudent);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫
        if (this.currentClass) {
          if (!this.currentClass.students) {
            this.currentClass.students = [];
          }
          this.currentClass.students.push({
            id: addedStudent.id,
            studentId: addedStudent.studentId,
            studentName: addedStudent.studentName,
            studentEmail: addedStudent.studentEmail,
            addedAt: addedStudent.addedAt,
            status: addedStudent.status
          });
        }
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        this.wsService.inviteToClass(studentId, currentUser.id, classData);
        
        this.devLog('üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç—É:', studentId);
        alert(`üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç—É ${studentName}`);
        
        // –£–±–∏—Ä–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
        this.availableStudents = this.availableStudents.filter(s => {
          const sObj = s as { id?: string };
          return sObj.id !== studentId;
        });
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫–ª–∞—Å—Å:', error);
        alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫–ª–∞—Å—Å');
      }
    });
  }

  addStudentToCurrentClass(student: { id?: string; name?: string; studentId?: string; [key: string]: unknown }): void {
    if (!this.currentClass) return;
    
    const currentClassObj = this.currentClass as { students?: unknown[] };
    if (!currentClassObj.students) {
      currentClassObj.students = [];
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞
    currentClassObj.students.push({
      id: student.studentId || Date.now().toString(),
      name: student.name,
      addedAt: new Date().toISOString()
    });
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    this.availableStudents = this.availableStudents.filter(s => {
      const studentObj = s as { studentId?: string; name?: string };
      return studentObj.studentId !== student.studentId && studentObj.name !== student.name;
    });
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    this.saveClassToStorage();
    
    console.log('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–ª–∞—Å—Å:', student.name);
  }

  closeStudentsList(): void {
    this.showStudentsList = false;
  }

  editClass(): void {
    console.log('‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∞—Å—Å–∞');
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–∏–∞–ª–æ–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞
    alert('–§—É–Ω–∫—Ü–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞ –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏');
  }

  deleteClass(): void {
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∞');
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–ª–∞—Å—Å? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
      this.currentClass = null;
      console.log('‚úÖ –ö–ª–∞—Å—Å —É–¥–∞–ª–µ–Ω');
    }
  }

  private generateInviteCode(): string {
    return Math.random().toString(36).substring(2, 10).toUpperCase();
  }

  // Helper methods for template safe property access
  getCurrentLessonSafe(): { studentTasks?: unknown[]; teacherTasks?: unknown[]; studentQuestions?: unknown[]; teacherQuestions?: unknown[]; homework?: unknown[]; [key: string]: unknown } | null {
    return this.currentLesson as { studentTasks?: unknown[]; teacherTasks?: unknown[]; studentQuestions?: unknown[]; teacherQuestions?: unknown[]; homework?: unknown[]; [key: string]: unknown } | null;
  }

  getCurrentClassSafe(): GroupClass | null {
    return this.currentClass;
  }

  getHomeworkTitle(homework: unknown): string {
    return (homework as { title?: string }).title || '';
  }

  getHomeworkDescription(homework: unknown): string {
    return (homework as { description?: string }).description || '';
  }

  hasHomeworkDescription(homework: unknown): boolean {
    return !!(homework as { description?: string }).description;
  }

  getHomeworkType(homework: unknown): string {
    const type = (homework as { type?: string }).type;
    return type === 'task' ? 'T√¢che' : type === 'question' ? 'Question' : 'Mat√©riel';
  }

  getHomeworkDueDate(homework: unknown): Date | null {
    const dueDate = (homework as { dueDate?: string | Date }).dueDate;
    return dueDate ? new Date(dueDate) : null;
  }

  getHomeworkStatus(homework: unknown): string {
    return (homework as { status?: string }).status || '';
  }

  isHomeworkCompleted(homework: unknown): boolean {
    return !!(homework as { isCompleted?: boolean }).isCompleted;
  }

  getHomeworkId(homework: unknown): string {
    return (homework as { id?: string }).id || '';
  }

  getStudentName(student: unknown): string {
    return (student as { name?: string }).name || (student as { studentName?: string }).studentName || 'Inconnu';
  }

  getStudentEmail(student: unknown): string {
    return (student as { email?: string }).email || 'Email non disponible';
  }

  getStudentLevel(student: unknown): string {
    return (student as { level?: string }).level || 'Niveau non sp√©cifi√©';
  }

  // Helper method for gabarit component
  getCurrentLessonForGabarit(): { texts?: unknown[]; audios?: unknown[]; videos?: unknown[]; [key: string]: unknown } | null {
    if (!this.currentLesson) return null;
    return this.currentLesson as { texts?: unknown[]; audios?: unknown[]; videos?: unknown[]; [key: string]: unknown };
  }

  // Helper methods for task/question properties
  getTaskTitle(task: unknown): string {
    return (task as { title?: string }).title || '';
  }

  getTaskId(task: unknown): string {
    return (task as { id?: string }).id || '';
  }

  getQuestionText(question: unknown): string {
    return (question as { question?: string }).question || '';
  }

  getQuestionId(question: unknown): string {
    return (question as { id?: string }).id || '';
  }

  // Helper methods for template method calls with unknown parameters
  onHoverSafe(item: unknown, event: MouseEvent): void {
    const itemStr = typeof item === 'string' ? item : (item as { title?: string; question?: string }).title || (item as { question?: string }).question || '';
    this.onHover(itemStr, event);
  }

  isCoveredInClassSafe(item: unknown): boolean {
    const itemId = (item as { id?: string }).id || '';
    return this.isCoveredInClass(itemId);
  }

  isAddedToHomeworkSafe(item: unknown): boolean {
    const itemId = (item as { id?: string }).id || '';
    return this.isAddedToHomework(itemId);
  }

  isResolvedSafe(item: unknown): boolean {
    const itemId = (item as { id?: string }).id || '';
    return this.isResolved(itemId);
  }

  markTaskAsCompletedSafe(task: unknown): void {
    const taskId = (task as { id?: string }).id;
    if (taskId) {
      this.markTaskAsCompleted(taskId);
    }
  }

  markQuestionAsCompletedSafe(question: unknown): void {
    const questionId = (question as { id?: string }).id;
    if (questionId) {
      this.markQuestionAsCompleted(questionId);
    }
  }

  openNotesSafe(section: 'tasks' | 'questions', item: unknown, itemObj: unknown): void {
    const itemId = (item as { id?: string }).id || '';
    const itemText = (item as { title?: string; question?: string }).title || (item as { question?: string }).question || '';
    this.openNotes(section, itemId, itemText);
  }

  // Safe student access for removing from class
  removeStudentFromClassSafe(student: unknown): void {
    const studentObj = student as { id?: string; name?: string; studentId?: string; [key: string]: unknown };
    this.removeStudentFromClass(studentObj);
  }

  // Safe check for students array length
  hasStudents(): boolean {
    return (this.currentClass?.students?.length || 0) > 0;
  }

  // ===== –ù–û–í–´–ï –ú–ï–¢–û–î–´ –î–õ–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –£–†–û–ö–û–ú –ò –í–ò–î–ï–û–ó–í–û–ù–ö–ê–ú–ò =====

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
   */
  private initializeWebSocket(): void {
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser?.id) return;

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ WebSocket
    this.wsService.registerUser(currentUser.id);

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    this.wsService.listen('connect').subscribe(() => {
      this.wsConnected = true;
      this.devLog('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω –¥–ª—è —É—Ä–æ–∫–∞!');
    });

    this.wsService.listen('disconnect').subscribe(() => {
      this.wsConnected = false;
      this.devLog('‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω!');
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —É—Ä–æ–∫–∞
    this.wsService.listen('room_participant_joined').subscribe((data: any) => {
      this.devLog('üë§ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —É—Ä–æ–∫—É:', data.participant);
      this.groupParticipants.push(data.participant);
    });

    this.wsService.listen('room_participant_left').subscribe((data: any) => {
      this.devLog('üë§ –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —É—Ä–æ–∫:', data.participant);
      this.groupParticipants = this.groupParticipants.filter(p => p !== data.participant);
    });
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ
   */
  private initializeVideoTracking(): void {
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    setInterval(() => {
      if (this.videoService.agoraClient) {
        this.remoteUsersCount = Object.keys(this.videoService.remoteUsers || {}).length;
      }
    }, 1000);
  }

  /**
   * –ù–∞—á–∞—Ç—å —É—Ä–æ–∫
   */
  startLesson(): void {
    this.devLog('üéì –ù–∞—á–∏–Ω–∞–µ–º —É—Ä–æ–∫!');
    this.lessonStarted = true;
    this.lessonEnded = false;
    this.lessonTimer = 30; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä –Ω–∞ 30 —Å–µ–∫—É–Ω–¥

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Å–∞
    if (this.currentClass) {
      this.currentClass.status = 'active';
      this.saveClassToStorage();
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä —É—Ä–æ–∫–∞
    this.startLessonTimer();

    // –£–≤–µ–¥–æ–º–ª—è–µ–º —á–µ—Ä–µ–∑ WebSocket –æ –Ω–∞—á–∞–ª–µ —É—Ä–æ–∫–∞
    this.notifyLessonStatus('started');
  }

  /**
   * –ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–∫
   */
  endLesson(): void {
    this.devLog('üèÅ –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–∫!');
    this.lessonStarted = false;
    this.lessonEnded = true;

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
    if (this.lessonTimerInterval) {
      clearInterval(this.lessonTimerInterval);
      this.lessonTimerInterval = null;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–ª–∞—Å—Å–∞
    if (this.currentClass) {
      this.currentClass.status = 'completed';
      this.saveClassToStorage();
    }

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
    this.videoService.stopVideoCall();
    
    // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º –æ–±—Ä–∞—Ç–Ω–æ
    this.isClassManagementCollapsed = false;

    // –£–≤–µ–¥–æ–º–ª—è–µ–º —á–µ—Ä–µ–∑ WebSocket –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —É—Ä–æ–∫–∞
    this.notifyLessonStatus('completed');
  }

  /**
   * –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä —É—Ä–æ–∫–∞
   */
  private startLessonTimer(): void {
    this.lessonTimerInterval = setInterval(() => {
      this.lessonTimer--;
      
      if (this.lessonTimer <= 0) {
        this.devLog('‚è∞ –í—Ä–µ–º—è —É—Ä–æ–∫–∞ –∏—Å—Ç–µ–∫–ª–æ!');
        this.endLesson();
      }
    }, 1000);
  }

  /**
   * –£–≤–µ–¥–æ–º–∏—Ç—å –æ —Å—Ç–∞—Ç—É—Å–µ —É—Ä–æ–∫–∞ —á–µ—Ä–µ–∑ WebSocket
   */
  private notifyLessonStatus(status: 'started' | 'completed'): void {
    if (!this.currentClass) return;

    this.wsService.sendMessage('lesson_status_changed', {
      classId: this.currentClass.id,
      status: status,
      timestamp: new Date().toISOString(),
      teacherId: this.authService.getCurrentUser()?.id
    });
  }

  /**
   * –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —É—Ä–æ–∫
   */
  inviteStudentsToLesson(): void {
    if (!this.currentClass || !this.currentClass.students) {
      alert('‚ùå –ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è');
      return;
    }

    const studentIds = this.currentClass.students.map(s => s.studentId);
    this.devLog('üìß –ü—Ä–∏–≥–ª–∞—à–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —É—Ä–æ–∫:', studentIds);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket
    this.wsService.sendMessage('invite_to_lesson', {
      classId: this.currentClass.id,
      studentIds: studentIds,
      teacherId: this.authService.getCurrentUser()?.id,
      lessonName: this.currentClass.name
    });

    alert(`üìß –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã ${studentIds.length} —Å—Ç—É–¥–µ–Ω—Ç–∞–º!`);
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  getLessonStatusText(): string {
    if (this.lessonEnded) return '–ó–∞–≤–µ—Ä—à–µ–Ω';
    if (this.lessonStarted) return '–í –ø—Ä–æ—Ü–µ—Å—Å–µ';
    return '–ù–µ –Ω–∞—á–∞—Ç';
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞ —É—Ä–æ–∫–∞
   */
  getLessonStatusColor(): string {
    if (this.lessonEnded) return '#6c757d'; // –°–µ—Ä—ã–π
    if (this.lessonStarted) return '#28a745'; // –ó–µ–ª–µ–Ω—ã–π
    return '#ffc107'; // –ñ–µ–ª—Ç—ã–π
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è —É—Ä–æ–∫–∞
   */
  formatLessonTime(): string {
    const minutes = Math.floor(this.lessonTimer / 60);
    const seconds = this.lessonTimer % 60;
    return `${minutes}:${seconds.toString().padStart(2, '0')}`;
  }

  /**
   * –ù–∞—á–∞—Ç—å –≤–∏–¥–µ–æ –∑–≤–æ–Ω–æ–∫
   */
  startVideoCall(): void {
    this.devLog('üé• –ó–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');
    
    if (!this.currentClass) {
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å');
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –≤ –∫–ª–∞—Å—Å–µ
    if (!this.currentClass.students || this.currentClass.students.length === 0) {
      alert('‚ùå –í –∫–ª–∞—Å—Å–µ –Ω–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');
      return;
    }

    this.devLog('üë• –°—Ç—É–¥–µ–Ω—Ç—ã –≤ –∫–ª–∞—Å—Å–µ:', this.currentClass.students);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º
    this.sendInvitationsToStudents();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –≥—Ä—É–ø–ø–æ–≤–æ–≥–æ —É—Ä–æ–∫–∞
    this.videoService.channelName = `class_${this.currentClass.id}`;
    this.videoService.setLessonData(this.currentClass.id, this.authService.getCurrentUser()?.id || '');
    
    this.videoService.startVideoCall();
    
    // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–∏–¥–µ–æ
    this.isClassManagementCollapsed = true;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —É—Ä–æ–∫
    this.lessonStarted = true;
    this.startLessonTimer();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã—Ö–æ–¥–∞
    history.pushState({ preventBack: true }, '', window.location.href);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤—Å–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∫–ª–∞—Å—Å–∞
   */
  private sendInvitationsToStudents(): void {
    if (!this.currentClass?.students) {
      this.devLog('‚ùå –ù–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π');
      return;
    }

    const teacherId = this.authService.getCurrentUser()?.id;
    if (!teacherId) {
      this.devLog('‚ùå ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    this.devLog('üìû –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º:', this.currentClass.students);

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    this.studentCallStates = {};
    this.connectedStudents = [];

    this.currentClass.students.forEach(student => {
      const studentId = (student as any).studentId;
      if (studentId) {
        this.devLog(`üìû –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—É ${studentId}`);
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ "–∑–≤–æ–Ω–æ–∫ –∏–¥–µ—Ç"
        this.studentCallStates[studentId] = 'calling';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        this.wsService.sendMessage('invite_to_lesson', {
          to: studentId,
          from: teacherId,
          classId: this.currentClass!.id,
          className: this.currentClass!.name,
          teacherName: this.authService.getCurrentUser()?.name || '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å'
        });
      }
    });

    this.devLog('üìä –°–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:', this.studentCallStates);
  }


  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ —É—Ä–æ–∫
   */
  private initializeLessonInvitations(): void {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–º
    this.wsService.listen('lesson_invitation_accepted').subscribe((data: any) => {
      this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:', data);
      
      if (data.studentId && this.studentCallStates[data.studentId]) {
        this.studentCallStates[data.studentId] = 'connected';
        this.connectedStudents.push(data.studentId);
        
        this.devLog('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:', this.studentCallStates);
        this.devLog('üë• –ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã:', this.connectedStudents);
      }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–º
    this.wsService.listen('lesson_invitation_declined').subscribe((data: any) => {
      this.devLog('‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:', data);
      
      if (data.studentId && this.studentCallStates[data.studentId]) {
        this.studentCallStates[data.studentId] = 'declined';
        
        this.devLog('üìä –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤:', this.studentCallStates);
      }
    });
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  getStudentCallState(studentId: string): 'calling' | 'connected' | 'declined' | 'unknown' {
    return this.studentCallStates[studentId] || 'unknown';
  }

  /**
   * –ü–æ–ª—É—á–∏—Ç—å –∏–º—è —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ ID
   */
  getStudentNameById(studentId: string): string {
    if (!this.currentClass?.students) return '–°—Ç—É–¥–µ–Ω—Ç';
    
    const student = this.currentClass.students.find(s => (s as any).studentId === studentId);
    return (student as any)?.studentName || '–°—Ç—É–¥–µ–Ω—Ç';
  }

  /**
   * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫ –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–ª–∞—Å—Å–æ–º
   */
  stopVideoCall(): void {
    this.devLog('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫
    this.videoService.stopVideoCall();
    
    // –ó–∞–≤–µ—Ä—à–∞–µ–º —É—Ä–æ–∫
    this.lessonStarted = false;
    this.lessonEnded = true;
    
    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä
    if (this.lessonTimerInterval) {
      clearInterval(this.lessonTimerInterval);
      this.lessonTimerInterval = null;
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    this.studentCallStates = {};
    this.connectedStudents = [];
    
    // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–º
    this.isClassManagementCollapsed = false;
    
    // –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    if (history.state?.preventBack) {
      history.back();
    }
    
    this.devLog('‚úÖ –í–∏–¥–µ–æ–∑–≤–æ–Ω–æ–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∫–ª–∞—Å—Å–æ–º');
  }

  /**
   * –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã—Ö–æ–¥–∞
   */
  private showExitConfirmation(): void {
    const dialogRef = this.dialog.open(ExitConfirmationDialogComponent, {
      width: '400px',
      data: {
        title: 'Confirmer la sortie',
        message: '√ätes-vous s√ªr de vouloir terminer l\'appel vid√©o ?',
        confirmText: 'Terminer l\'appel',
        cancelText: 'Annuler'
      }
    });

    dialogRef.afterClosed().subscribe(result => {
      if (result === true) {
        this.stopVideoCall();
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞–∑–∞–¥ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        history.back();
      } else {
        // –ï—Å–ª–∏ –æ—Ç–º–µ–Ω–∏–ª–∏, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤—ã—Ö–æ–¥
        history.pushState(null, '', window.location.href);
      }
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∞—Å—Å–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
  private loadStudentClassInfo(): void {
    this.devLog('üìö –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞...');
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∞—Å—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ group_class_students
    this.groupClassService.getStudentClasses(currentUser.id).subscribe({
      next: (classes) => {
        this.devLog('üìö –ö–ª–∞—Å—Å—ã —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ group_class_students:', classes);
        
        if (classes && classes.length > 0) {
          // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–ª–∞—Å—Å (–º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤)
          const classInfo = classes[0] as any;
          this.studentClassInfo = {
            id: classInfo.id,
            name: classInfo.name || 'Classe sans nom',
            level: classInfo.level || 'Niveau non d√©fini',
            teacherId: classInfo.teacherId,
            status: classInfo.status,
            startTime: classInfo.scheduledAt,
            endTime: classInfo.scheduledAt // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
          };
          
          // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ
          this.loadTeacherInfo(classInfo.teacherId);
        } else {
          this.devLog('üìö –°—Ç—É–¥–µ–Ω—Ç –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–∏ –≤ –æ–¥–Ω–æ–º –∫–ª–∞—Å—Å–µ');
          this.studentClassInfo = null;
        }
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —É—Ä–æ–∫–æ–≤ —Å—Ç—É–¥–µ–Ω—Ç–∞:', error);
        this.studentClassInfo = null;
      }
    });
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ
  private loadTeacherInfo(teacherId: string): void {
    this.devLog('üë®‚Äçüè´ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ:', teacherId);
    
    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —á–µ—Ä–µ–∑ authService
    this.authService.getUserEmail(teacherId).subscribe({
      next: (userInfo) => {
        this.devLog('üë®‚Äçüè´ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ –ø–æ–ª—É—á–µ–Ω–∞:', userInfo);
        const fullName = `${userInfo.name || ''} ${userInfo.surname || ''}`.trim() || 'Professeur';
        this.teacherInfo = {
          id: teacherId,
          name: fullName,
          email: userInfo.email || 'prof@example.com'
        };
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ:', error);
        // Fallback –Ω–∞ –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        this.teacherInfo = {
          id: teacherId,
          name: 'Professeur',
          email: 'prof@example.com'
        };
      }
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
  private initializeStudentWebSocketListeners(): void {
    this.devLog('üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞...');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ WebSocket
    const currentUser = this.authService.getCurrentUser();
    if (currentUser) {
      this.wsService.registerUser(currentUser.id);
    }

    // –°–ª—É—à–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
    this.wsService.listen('class_invitation').subscribe({
      next: (invitationData) => {
        this.devLog('üì® –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', invitationData);
        this.handleClassInvitation(invitationData);
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å:', error);
      }
    });

    // –°–ª—É—à–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    this.wsService.listen('class_invitation_accepted').subscribe({
      next: (data) => {
        this.devLog('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å –ø—Ä–∏–Ω—è—Ç–æ:', data);
        this.handleClassInvitationAccepted(data);
      }
    });

    // –°–ª—É—à–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    this.wsService.listen('class_invitation_declined').subscribe({
      next: (data) => {
        this.devLog('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ:', data);
        this.handleClassInvitationDeclined(data);
      }
    });
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –ø—Ä–∏ –≤—Ö–æ–¥–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
  private loadUnreadInvitations(): void {
    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π');
      return;
    }

    this.devLog('üì® –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞:', currentUser.id);
    
    this.lessonService.getUnreadInvitationsForStudent(currentUser.id).subscribe({
      next: (invitations) => {
        this.devLog('üì® –ü–æ–ª—É—á–µ–Ω—ã –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', invitations);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        invitations.forEach(invitation => {
          this.pendingClassInvitations.push({
            id: invitation.id,
            recordId: invitation.id, // ID –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            classId: invitation.groupClassId,
            name: invitation.groupClass?.name || '–ö–ª–∞—Å—Å',
            level: invitation.groupClass?.level || 'A1',
            description: invitation.groupClass?.description || '',
            teacherId: invitation.groupClass?.teacherId || '',
            teacherName: invitation.groupClass?.teacherName || 'Professeur',
            timestamp: new Date(invitation.invitedAt || invitation.addedAt),
            isFromDatabase: true,
            invitationMessage: invitation.invitationMessage,
            status: invitation.status || 'invited', // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            isRead: invitation.isRead || false,
            invitationResponse: invitation.invitationResponse || null // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
          });
        });

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è, –Ω–æ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        this.devLog('üì® –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –≤ –ø–∞–Ω–µ–ª–∏');
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π:', error);
      }
    });
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –±–µ–∑ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  private closeInvitationDialog(): void {
    this.devLog('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–∫–µ');
    this.showInvitationDialog = false;
    this.currentInvitation = null;
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–∏–∞–ª–æ–≥–∞ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞ (—Ç–æ–ª—å–∫–æ –æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ)
  closeInvitationWithoutResponse(): void {
    this.devLog('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –±–µ–∑ –æ—Ç–≤–µ—Ç–∞');
    
    if (this.currentInvitation && this.currentInvitation.isFromDatabase) {
      this.lessonService.closeInvitationWithoutResponse(this.currentInvitation.recordId).subscribe({
        next: (result) => {
          this.devLog('üîí –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –±–µ–∑ –æ—Ç–≤–µ—Ç–∞:', result);
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
          const invitation = this.pendingClassInvitations.find(inv => inv.recordId === this.currentInvitation.recordId);
          if (invitation) {
            invitation.isRead = true;
          }
          this.closeInvitationDialog();
        },
        error: (error) => {
          this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
          this.closeInvitationDialog();
        }
      });
    } else {
      this.closeInvitationDialog();
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
  private handleClassInvitation(invitationData: any): void {
    this.devLog('üì® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', invitationData);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞—é—â–∏—Ö
    this.pendingClassInvitations.push({
      id: invitationData.classId,
      name: invitationData.className,
      level: invitationData.classLevel,
      description: invitationData.classDescription,
      teacherId: invitationData.teacherId,
      teacherName: invitationData.teacherName || 'Professeur',
      timestamp: new Date(),
      isFromDatabase: false
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –ø–∞–Ω–µ–ª–∏
    this.devLog('üì® –ù–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –ø–∞–Ω–µ–ª–∏');
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
  private handleClassInvitationAccepted(data: any): void {
    this.devLog('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞');
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ
    this.loadStudentClassInfo();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
  private handleClassInvitationDeclined(data: any): void {
    this.devLog('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ');
    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
    this.pendingClassInvitations = this.pendingClassInvitations.filter(
      inv => inv.id !== data.classId
    );
  }

  // –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
  acceptClassInvitation(): void {
    if (!this.currentInvitation) return;

    this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', this.currentInvitation);

    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º API
    if (this.currentInvitation.isFromDatabase) {
      this.lessonService.acceptClassInvitation(this.currentInvitation.recordId).subscribe({
        next: (result) => {
          this.devLog('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ —á–µ—Ä–µ–∑ API:', result);
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
          const invitation = this.pendingClassInvitations.find(inv => inv.recordId === this.currentInvitation.recordId);
          if (invitation) {
            invitation.invitationResponse = 'confirmed';
          }
          this.removeInvitationFromList();
          this.loadStudentClassInfo(); // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ
        },
        error: (error) => {
          this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
        }
      });
    } else {
      // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ
      this.wsService.acceptClassInvitation(
        this.currentInvitation.teacherId,
        currentUser.id,
        this.currentInvitation.id
      );
      this.removeInvitationFromList();
    }
  }

  // –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å
  rejectClassInvitation(): void {
    if (!this.currentInvitation) return;

    this.devLog('‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', this.currentInvitation);

    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º API –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
    if (this.currentInvitation.isFromDatabase) {
      this.lessonService.declineClassInvitation(this.currentInvitation.recordId).subscribe({
        next: (result) => {
          this.devLog('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ API:', result);
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
          const invitation = this.pendingClassInvitations.find(inv => inv.recordId === this.currentInvitation.recordId);
          if (invitation) {
            invitation.invitationResponse = 'rejected';
          }
          this.closeInvitationDialog();
        },
        error: (error) => {
          this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
        }
      });
    } else {
      // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
      this.devLog('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º WebSocket –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
      this.closeInvitationDialog();
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏)
  private removeInvitationFromList(): void {
    if (this.currentInvitation) {
      this.pendingClassInvitations = this.pendingClassInvitations.filter(
        inv => inv.id !== this.currentInvitation.id
      );
    }

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    this.showInvitationDialog = false;
    this.currentInvitation = null;
  }

  // –ü—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
  acceptClassInvitationFromList(invitation: any): void {
    this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞:', invitation);

    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º API
    if (invitation.isFromDatabase && invitation.recordId) {
      this.lessonService.acceptClassInvitation(invitation.recordId).subscribe({
        next: (result) => {
          this.devLog('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ —á–µ—Ä–µ–∑ API:', result);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
          const invitationIndex = this.pendingClassInvitations.findIndex(inv => inv.recordId === invitation.recordId);
          if (invitationIndex !== -1) {
            this.pendingClassInvitations[invitationIndex].invitationResponse = 'confirmed';
          }
          
          // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
          this.pendingClassInvitations = this.pendingClassInvitations.filter(
            inv => inv.recordId !== invitation.recordId
          );
          
          // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Å–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
          this.loadStudentClassInfo();
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
          this.snackBar.open('Invitation accept√©e! Vous avez rejoint la classe.', 'Fermer', { 
            duration: 3000,
            panelClass: ['success-snackbar']
          });
        },
        error: (error) => {
          this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–Ω—è—Ç–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
          this.snackBar.open('Erreur lors de l\'acceptation de l\'invitation', 'Fermer', { 
            duration: 3000,
            panelClass: ['error-snackbar']
          });
        }
      });
    } else {
      // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ
      this.wsService.acceptClassInvitation(
        invitation.teacherId,
        currentUser.id,
        invitation.id
      );

      // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
      this.pendingClassInvitations = this.pendingClassInvitations.filter(
        inv => inv.id !== invitation.id
      );
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      this.snackBar.open('Invitation accept√©e!', 'Fermer', { 
        duration: 3000,
        panelClass: ['success-snackbar']
      });
    }
  }

  // –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞
  rejectClassInvitationFromList(invitation: any): void {
    this.devLog('‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω—è–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞:', invitation);

    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ–º API
    if (invitation.isFromDatabase && invitation.recordId) {
      this.lessonService.declineClassInvitation(invitation.recordId).subscribe({
        next: (result) => {
          this.devLog('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ —á–µ—Ä–µ–∑ API:', result);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–ø–∏—Å–∫–µ
          const invitationIndex = this.pendingClassInvitations.findIndex(inv => inv.recordId === invitation.recordId);
          if (invitationIndex !== -1) {
            this.pendingClassInvitations[invitationIndex].invitationResponse = 'rejected';
          }
          
          // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
          this.pendingClassInvitations = this.pendingClassInvitations.filter(
            inv => inv.recordId !== invitation.recordId
          );
          
          // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
          this.snackBar.open('Invitation refus√©e', 'Fermer', { 
            duration: 3000,
            panelClass: ['info-snackbar']
          });
        },
        error: (error) => {
          this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
          this.snackBar.open('Erreur lors du refus de l\'invitation', 'Fermer', { 
            duration: 3000,
            panelClass: ['error-snackbar']
          });
        }
      });
    } else {
      // –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket, –ø—Ä–æ—Å—Ç–æ –∑–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
      // –ù–ï –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
      this.devLog('üîí –ó–∞–∫—Ä—ã–≤–∞–µ–º WebSocket –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
      this.closeInvitationDialog();
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–Ω–æ–≤–∞
  showInvitationDialogAgain(invitation: any): void {
    this.devLog('üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å–Ω–æ–≤–∞:', invitation);
    this.currentInvitation = invitation;
    this.showInvitationDialog = true;
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –ø–æ–∫–∞–∑–∞—Ç—å –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  checkAndShowUnreadInvitations(): void {
    this.devLog('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è...');
    
    // –ï—Å–ª–∏ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–∏–∞–ª–æ–≥, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥—Ä—É–≥–æ–π
    if (this.showInvitationDialog) {
      this.devLog('üîç –î–∏–∞–ª–æ–≥ —É–∂–µ –æ—Ç–∫—Ä—ã—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
      return;
    }

    // –ò—â–µ–º –ø–µ—Ä–≤–æ–µ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
    const unreadInvitation = this.pendingClassInvitations.find(inv => !inv.isRead);
    
    if (unreadInvitation) {
      this.devLog('üì® –ù–∞–π–¥–µ–Ω–æ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:', unreadInvitation);
      this.currentInvitation = unreadInvitation;
      this.showInvitationDialog = true;
    } else {
      this.devLog('üì® –ù–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
  }

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
  private startInvitationChecker(): void {
    this.devLog('‚è∞ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    setInterval(() => {
      this.devLog('‚è∞ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π...');
      this.checkAndShowUnreadInvitations();
    }, 30000);
  }

  // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –ø–∞–Ω–µ–ª–∏
  hasUnreadInvitations(): boolean {
    return !this.hideNotificationUntilReload && this.pendingClassInvitations.some(inv => 
      inv.status === 'invited' && inv.invitationResponse === null
    );
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ –ø–∞–Ω–µ–ª–∏
  showInvitationDialogFromPanel(): void {
    this.devLog('üëÅÔ∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ –ø–∞–Ω–µ–ª–∏');
    const unreadInvitation = this.pendingClassInvitations.find(inv => 
      inv.status === 'invited' && inv.invitationResponse === null
    );
    if (unreadInvitation) {
      this.currentInvitation = unreadInvitation;
      this.showInvitationDialog = true;
    }
  }

  // –°–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ (–¥–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏)
  dismissInvitationNotification(): void {
    this.devLog('üôà –í—Ä–µ–º–µ–Ω–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏');
    this.hideNotificationUntilReload = true;
    // –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  }


  // –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –∫–ª–∞—Å—Å
  inviteStudentsToClass(): void {
    this.devLog('üì® –û—Ç–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤');
    
    if (!this.currentClass) {
      this.devLog('‚ùå –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞');
      return;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    this.loadAvailableStudents();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
    this.showStudentsList = true;
  }

  // –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫–ª–∞—Å—Å
  inviteStudentToClass(student: any): void {
    this.devLog('üì® –ü—Ä–∏–≥–ª–∞—à–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –∫–ª–∞—Å—Å:', student);
    
    if (!this.currentClass) {
      this.devLog('‚ùå –ù–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞');
      return;
    }

    const currentUser = this.authService.getCurrentUser();
    if (!currentUser) {
      this.devLog('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return;
    }

    const studentId = student.studentId || student.id;
    const teacherId = currentUser.id;
    const classId = this.currentClass.id;
    const message = `–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å ${this.currentClass.name} (${this.currentClass.level})`;

    this.devLog('üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:', { studentId, teacherId, classId, message });

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API
    this.lessonService.createClassInvitation(classId, teacherId, studentId, message).subscribe({
      next: (invitation) => {
        this.devLog('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:', invitation);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º WebSocket —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.wsService.inviteToClass(studentId, teacherId, {
          id: this.currentClass!.id,
          name: this.currentClass!.name,
          level: this.currentClass!.level,
          description: this.currentClass!.description,
          teacherName: currentUser.name || currentUser.surname || 'Professeur'
        });

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.snackBar.open(`Invitation envoy√©e √† ${student.studentName || student.name}`, 'Fermer', { duration: 3000 });
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
        this.closeStudentsList();
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:', error);
        this.snackBar.open('Erreur lors de l\'envoi de l\'invitation', 'Fermer', { duration: 3000 });
      }
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  private initializeTeacherWebSocketListeners(): void {
    this.devLog('üîå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebSocket —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è...');
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ WebSocket
    const currentUser = this.authService.getCurrentUser();
    if (currentUser) {
      this.wsService.registerUser(currentUser.id);
    }

    // –°–ª—É—à–∞–µ–º –ø—Ä–∏–Ω—è—Ç–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –∫–ª–∞—Å—Å
    this.wsService.listen('class_accept').subscribe({
      next: (data) => {
        this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', data);
        this.handleClassInvitationAcceptedByTeacher(data);
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∏–Ω—è—Ç–∏—è:', error);
      }
    });

    // –°–ª—É—à–∞–µ–º –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π –≤ –∫–ª–∞—Å—Å
    this.wsService.listen('class_reject').subscribe({
      next: (data) => {
        this.devLog('‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å:', data);
        this.handleClassInvitationRejectedByTeacher(data);
      },
      error: (error) => {
        this.devLog('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:', error);
      }
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–Ω—è—Ç–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º
  private handleClassInvitationAcceptedByTeacher(data: any): void {
    this.devLog('‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∫–ª–∞—Å—Å:', data);
    
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ –∫–ª–∞—Å—Å–µ
    // –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é
    
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∞—Å—Å—ã –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
    this.loadTeacherClasses();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    alert(`‚úÖ –°—Ç—É–¥–µ–Ω—Ç –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å!`);
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º
  private handleClassInvitationRejectedByTeacher(data: any): void {
    this.devLog('‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ:', data);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—é
    alert(`‚ùå –°—Ç—É–¥–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–ª–∞—Å—Å.`);
  }
}
