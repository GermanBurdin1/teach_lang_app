import { Component, OnDestroy, OnInit, ViewChild, AfterViewChecked, HostListener } from '@angular/core';
import { BackgroundService } from '../../services/background.service';
import { Subscription } from 'rxjs';
import { LessonTabsService } from '../../services/lesson-tabs.service';
import { Router, ActivatedRoute } from '@angular/router';
import { VideoCallService } from '../../services/video-call.service';
import { LoaderComponent } from '../../shared/components/loader/loader.component';

@Component({
  selector: 'app-lesson-material',
  templateUrl: './lesson-material.component.html',
  styleUrls: ['./lesson-material.component.css'],
})
export class LessonMaterialComponent implements OnInit, OnDestroy {


  backgroundStyle: string = '';
  private backgroundSubscription: Subscription | undefined;
  private isVideoCallStarted = false;
  showBoard = false;


  constructor(private backgroundService: BackgroundService, public lessonTabsService: LessonTabsService, private router: Router, private route: ActivatedRoute, public videoService: VideoCallService) { }

  listIcons: string[] = [
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–µ—Ä–≤–æ–π –∏–∫–æ–Ω–∫–∏
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∏–∫–æ–Ω–∫–∏
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç—Ä–µ—Ç—å–µ–π –∏–∫–æ–Ω–∫–∏
    'fas fa-chalkboard', // –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞
  ];

  trackByIndex(index: number, item: string): number {
    return index;
  }

  ngOnInit(): void {
    console.log('‚úÖ LessonMaterialComponent –∑–∞–≥—Ä—É–∂–µ–Ω');

    this.backgroundSubscription = this.backgroundService.background$.subscribe(
      (newBackground) => {
        this.backgroundStyle = newBackground;
      }
    );

    this.lessonTabsService.contentView$.subscribe((value) => {
      console.log('üîç Observed contentView:', value);
    });

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∫–ª–∞—Å—Å
    if (this.videoService.getRegularVideoActive()) {
      console.log('üé• –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ –ø–æ—Å–ª–µ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∫–ª–∞—Å—Å');
      this.videoService.startVideoCall(); // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ
    }

    // –í—ã–∫–ª—é—á–∞–µ–º Floating Video –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –∫–ª–∞—Å—Å
    this.videoService.setFloatingVideoActive(false);
    this.videoService.toggleFloatingVideo(false);

    this.route.queryParams.subscribe(params => {
      console.log('üìç –ü–æ–ª—É—á–µ–Ω—ã queryParams:', params);

      if (params['startCall'] === 'true') {
        console.log('üé• –°—Ç–∞—Ä—Ç –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä—É URL');
        this.videoService.startVideoCall();
      }
    });

    console.log('üìç ActivatedRoute snapshot:', this.route.snapshot.paramMap.keys);
    console.log('üìç ActivatedRoute param id:', this.route.snapshot.paramMap.get('id'));

    this.route.paramMap.subscribe(params => {
      console.log('üìç paramMap —Å–æ–¥–µ—Ä–∂–∏—Ç:', params.keys);
      const lessonId = params.get('id');
      if (lessonId) {
        console.log(`üîÑ –û–±–Ω–æ–≤–ª—è–µ–º lessonId: ${lessonId}`);
        this.lessonTabsService.setCurrentLessonId(lessonId);
      }
    });

    this.videoService.resetVideoSize();

  }

  ngOnDestroy(): void {
    if (this.backgroundSubscription) {
      console.log('üì¢ –û—Ç–ø–∏—Å–∫–∞ –æ—Ç backgroundSubscription');
      this.backgroundSubscription.unsubscribe();
    }

    // ‚ùå –ù–ï –°–ë–†–ê–°–´–í–ê–ï–ú –í–ò–î–ï–û, –ß–¢–û–ë–´ –û–ù–û –ù–ï –ü–†–û–ü–ê–î–ê–õ–û
    console.log(`üé• –ü–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ showVideoCall$ = ${this.videoService.showVideoCallSubject.getValue()}`);
  }

  // —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è
  highlight: string | null = null;

  highlightCard(card: string) {
    this.highlight = card;
  }

  resetCard(card: string) {
    if (this.highlight === card) {
      this.highlight = null;
    }
  }

  //
  showLanguageModal: boolean = false; // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  selectedLanguage: string = ''; // –í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫


  // –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ—Å–∫–∏
  openInteractiveBoard(): void {
    console.log('üîó –ù–∞–≤–∏–≥–∞—Ü–∏—è –∫', `${this.lessonTabsService.getCurrentLessonId()}/board`);

    this.videoService.setRegularVideoActive(false);
    this.videoService.setFloatingVideoActive(true);
    this.videoService.setFloatingVideoSize(320, 180);

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏
    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {
      this.router.navigate([`${this.lessonTabsService.getCurrentLessonId()}/board`]);
    });
  }

  startVideoCall(): void {
    if (this.videoService.showVideoCallSubject.getValue()) {
      console.log('‚ö† –í–∏–¥–µ–æ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ–º');
      return;
    }

    console.log('üé• –ó–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–∞');
    this.videoService.startVideoCall();
  }


  set showVideoCall(value: boolean) {
    console.log('üîÑ showVideoCall –∏–∑–º–µ–Ω—ë–Ω:', value);
    this._showVideoCall = value;
  }

  get showVideoCall(): boolean {
    return this._showVideoCall;
  }

  private _showVideoCall = false;


  @HostListener('document:mousemove', ['$event'])
  onMouseMove(event: MouseEvent): void {
    this.videoService.onResize(event);
  }

  startDrag(event: MouseEvent): void {
    this.videoService.startResize(event);
  }
}
