import { Component, OnDestroy, OnInit, ViewChild, AfterViewChecked} from '@angular/core';
import { BackgroundService } from '../../services/background.service';
import { Subscription } from 'rxjs';
import { LessonTabsService } from '../../services/lesson-tabs.service';
import { Router,ActivatedRoute } from '@angular/router';
import { VideoCallComponent } from '../../features/lessons/video-call/video-call.component';

@Component({
  selector: 'app-lesson-material',
  templateUrl: './lesson-material.component.html',
  styleUrls: ['./lesson-material.component.css'],
})
export class LessonMaterialComponent implements OnInit, OnDestroy, AfterViewChecked {
  @ViewChild('videoCall', { read: VideoCallComponent }) videoCallComponent!: VideoCallComponent;


  backgroundStyle: string = '';
  private backgroundSubscription: Subscription | undefined;
  private isVideoCallStarted = false;

  constructor(private backgroundService: BackgroundService, public lessonTabsService: LessonTabsService, private router: Router, private route: ActivatedRoute ) { }

  listIcons: string[] = [
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø–µ—Ä–≤–æ–π –∏–∫–æ–Ω–∫–∏
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∏–∫–æ–Ω–∫–∏
    'icon-empty', // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç—Ä–µ—Ç—å–µ–π –∏–∫–æ–Ω–∫–∏
    'fas fa-chalkboard', // –ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–∞—è –∏–∫–æ–Ω–∫–∞
  ];

  trackByIndex(index: number, item: string): number {
    return index;
  }


  ngOnInit(): void {
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ–Ω–∞
    this.backgroundSubscription = this.backgroundService.background$.subscribe(
      (newBackground) => {
        this.backgroundStyle = newBackground;
      }
    );
    this.lessonTabsService.contentView$.subscribe((value) => {
      console.log('Observed contentView:', value);
    });

    this.route.queryParams.subscribe(params => {
      if (params['startCall'] === 'true') {
        this.startVideoCall();
      }
    });

  }

  ngAfterViewChecked(): void {
    if (this.showVideoCall && !this.isVideoCallStarted && this.videoCallComponent) {
      console.log('‚úÖ VideoCallComponent –Ω–∞–π–¥–µ–Ω –≤ ngAfterViewChecked, –∑–∞–ø—É—Å–∫–∞–µ–º startCall()');
      this.isVideoCallStarted = true;
      this.videoCallComponent.startCall();
    }
  }

  ngOnDestroy(): void {
    // –û—Ç–ø–∏—Å—ã–≤–∞–µ–º—Å—è –ø—Ä–∏ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    if (this.backgroundSubscription) {
      this.backgroundSubscription.unsubscribe();
    }
  }

  // —Å—Ç–∏–ª–∏–∑–∞—Ü–∏—è
  highlight: string | null = null;

  highlightCard(card: string) {
    this.highlight = card;
  }

  resetCard(card: string) {
    if (this.highlight === card) {
      this.highlight = null;
    }
  }

  //
  showLanguageModal: boolean = false; // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  selectedLanguage: string = ''; // –í—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫


  // –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –¥–æ—Å–∫–∏
  openInteractiveBoard(): void {
    this.router.navigate([`${this.lessonTabsService.getCurrentLessonId()}/board`]); // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ID —É—Ä–æ–∫–∞ —É–∫–∞–∑–∞–Ω
  }



  startVideoCall(): void {
    console.log('üé• startVideoCall() –≤—ã–∑–≤–∞–Ω');
    this.showVideoCall = true;
  }

  set showVideoCall(value: boolean) {
    console.log('üîÑ showVideoCall –∏–∑–º–µ–Ω—ë–Ω:', value);
    this._showVideoCall = value;
  }

  get showVideoCall(): boolean {
    return this._showVideoCall;
  }

  private _showVideoCall = false;
}
