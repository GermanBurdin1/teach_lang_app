import { Component, OnInit } from '@angular/core';
import { VideoCallService } from '../services/video-call.service';
import { WebSocketService } from '../services/web-socket.service';

@Component({
  selector: 'app-test-video-call',
  template: `
    <div class="test-container">
      <h1>üé• –¢–µ—Å—Ç –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–æ–≤</h1>
      
      <div class="user-section">
        <h3>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</h3>
        <button class="user-btn teacher" (click)="setUser('teacher1', '–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω')">
          üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω (teacher1)
        </button>
        <button class="user-btn student" (click)="setUser('student1', '–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä')">
          üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä (student1)
        </button>
        <button class="user-btn student" (click)="setUser('student2', '–°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è')">
          üë©‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è (student2)
        </button>
      </div>

      <div class="current-user" *ngIf="currentUser">
        <h3>–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ currentUserName }} ({{ currentUser }})</h3>
      </div>

      <div class="actions" *ngIf="currentUser">
        <h3>–î–µ–π—Å—Ç–≤–∏—è:</h3>
        <button class="action-btn start" (click)="startVideoCall()" [disabled]="videoActive">
          üìπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª
        </button>
        <button class="action-btn stop" (click)="stopVideoCall()" [disabled]="!videoActive">
          üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª
        </button>
        
        <div class="call-targets" *ngIf="currentUser !== 'teacher1'">
          <button class="action-btn" (click)="callUser('teacher1')">
            üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å —É—á–∏—Ç–µ–ª—é
          </button>
        </div>
        
        <div class="call-targets" *ngIf="currentUser === 'teacher1'">
          <button class="action-btn" (click)="callUser('student1')">
            üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ü–µ—Ç—Ä—É
          </button>
          <button class="action-btn" (click)="callUser('student2')">
            üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ú–∞—Ä–∏–∏
          </button>
        </div>
      </div>

      <div class="status">
        <h3>–°—Ç–∞—Ç—É—Å:</h3>
        <p>WebSocket: {{ wsConnected ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω' }}</p>
        <p>–í–∏–¥–µ–æ: {{ videoActive ? 'üìπ –ê–∫—Ç–∏–≤–Ω–æ' : 'üìµ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ' }}</p>
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {{ userRegistered ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' }}</p>
      </div>

      <!-- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞ -->
      <app-video-call 
        *ngIf="videoCallService.showVideoCallSubject.getValue()"
        [isFloatingMode]="false">
      </app-video-call>
    </div>
  `,
  styles: [`
    .test-container {
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
    }
    
    .user-section, .actions, .status {
      margin: 20px 0;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
    }
    
    .user-btn, .action-btn {
      margin: 5px;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
    }
    
    .user-btn.teacher {
      background: #3498db;
      color: white;
    }
    
    .user-btn.student {
      background: #2ecc71;
      color: white;
    }
    
    .action-btn {
      background: #e74c3c;
      color: white;
    }
    
    .action-btn.start {
      background: #27ae60;
    }
    
    .action-btn.stop {
      background: #e74c3c;
    }
    
    .action-btn:disabled {
      background: #bdc3c7;
      cursor: not-allowed;
      opacity: 0.5;
    }
    
    .user-btn:hover, .action-btn:hover {
      opacity: 0.8;
    }
    
    .current-user {
      background: #f8f9fa;
      padding: 10px;
      border-radius: 5px;
      margin: 10px 0;
    }
    
    .call-targets {
      margin: 10px 0;
    }
    
    .status p {
      margin: 5px 0;
      font-weight: bold;
    }
  `]
})
export class TestVideoCallComponent implements OnInit {
  currentUser: string = '';
  currentUserName: string = '';
  wsConnected: boolean = false;
  videoActive: boolean = false;
  userRegistered: boolean = false;

  constructor(
    public videoCallService: VideoCallService,
    private wsService: WebSocketService
  ) {}

  ngOnInit() {
    console.log('üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ
    this.videoCallService.showVideoCall$.subscribe(active => {
      this.videoActive = active;
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket
    this.wsService.listen('connect').subscribe(() => {
      this.wsConnected = true;
      console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω!');
    });

    this.wsService.listen('disconnect').subscribe(() => {
      this.wsConnected = false;
      this.userRegistered = false;
      console.log('‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω!');
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è WebSocket
    this.wsService.listen('registered').subscribe(() => {
      this.userRegistered = true;
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ WebSocket');
    });

    this.wsService.listen('call_invite').subscribe((data: any) => {
      console.log(`üìû –í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤ –æ—Ç ${data.from}`);
      const accept = confirm(`üìû –í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤ –æ—Ç ${data.from}. –ü—Ä–∏–Ω—è—Ç—å?`);
      if (accept) {
        this.wsService.acceptCall(data.from, data.to);
        this.startVideoCall();
      } else {
        this.wsService.rejectCall(data.from, data.to);
      }
    });

    this.wsService.listen('call_accept').subscribe((data: any) => {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${data.from} –ø—Ä–∏–Ω—è–ª –≤—ã–∑–æ–≤`);
      this.startVideoCall();
    });

    this.wsService.listen('call_reject').subscribe((data: any) => {
      alert(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª –≤—ã–∑–æ–≤`);
    });
  }

  setUser(userId: string, userName: string) {
    this.currentUser = userId;
    this.currentUserName = userName;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Ä–≤–∏—Å–µ
    this.videoCallService.setLessonData('test-lesson-123', userId);
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ WebSocket
    this.wsService.registerUser(userId);
    
    console.log(`üë§ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName} (${userId})`);
  }

  startVideoCall() {
    console.log('üé• –ó–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞');
    this.videoCallService.startVideoCall();
  }

  stopVideoCall() {
    console.log('üî¥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞');
    this.videoCallService.stopVideoCall();
    // –¢–∞–∫–∂–µ –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç Agora –∫–∞–Ω–∞–ª–∞
    this.videoCallService.leaveChannel();
  }

  callUser(targetUserId: string) {
    if (!this.currentUser) {
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }
    
    console.log(`üìû –ó–≤–æ–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}`);
    this.wsService.initiateCall(targetUserId, this.currentUser);
  }
}
