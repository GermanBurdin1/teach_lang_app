import { Component, OnInit } from '@angular/core';
import { VideoCallService } from '../services/video-call.service';
import { WebSocketService } from '../services/web-socket.service';

interface GroupRoom {
  id: string;
  name: string;
  creator: string;
  participants: string[];
  maxParticipants: number;
  createdAt: Date;
}

interface AvailableRoom {
  id: string;
  name: string;
  participants: number;
  creator: string;
}

@Component({
  selector: 'app-test-video-call',
  template: `
    <div class="test-container">
      <h1>üé• –¢–µ—Å—Ç –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–æ–≤</h1>
      
      <div class="user-section">
        <h3>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</h3>
        <button class="user-btn teacher" (click)="setUser('teacher1', '–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω')">
          üë®‚Äçüè´ –£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω (teacher1)
        </button>
        <button class="user-btn student" (click)="setUser('student1', '–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä')">
          üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä (student1)
        </button>
        <button class="user-btn student" (click)="setUser('student2', '–°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è')">
          üë©‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è (student2)
        </button>
        <button class="user-btn student" (click)="setUser('student3', '–°—Ç—É–¥–µ–Ω—Ç –ê–ª–∏—Å–∞')">
          üë©‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ê–ª–∏—Å–∞ (student3)
        </button>
        <button class="user-btn student" (click)="setUser('student4', '–°—Ç—É–¥–µ–Ω—Ç –ù–∏–∫–∏—Ç–∞')">
          üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç –ù–∏–∫–∏—Ç–∞ (student4)
        </button>
      </div>

      <div class="current-user" *ngIf="currentUser">
        <h3>–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {{ currentUserName }} ({{ currentUser }})</h3>
      </div>

      <div class="actions" *ngIf="currentUser">
        <h3>–î–µ–π—Å—Ç–≤–∏—è:</h3>
        
        <!-- –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ -->
        <div class="action-section">
          <h4>üéØ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏:</h4>
          <button class="action-btn start" (click)="startVideoCall()" [disabled]="videoActive">
            üìπ –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª
          </button>
          <button class="action-btn stop" (click)="stopVideoCall()" [disabled]="!videoActive">
            üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª
          </button>
          
          <div class="call-targets" *ngIf="currentUser !== 'teacher1'">
            <button class="action-btn" (click)="callUser('teacher1')">
              üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å —É—á–∏—Ç–µ–ª—é
            </button>
          </div>
          
          <div class="call-targets" *ngIf="currentUser === 'teacher1'">
            <button class="action-btn" (click)="callUser('student1')">
              üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ü–µ—Ç—Ä—É
            </button>
            <button class="action-btn" (click)="callUser('student2')">
              üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ú–∞—Ä–∏–∏
            </button>
          </div>
        </div>

        <!-- –ì—Ä—É–ø–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ -->
        <div class="action-section group-section">
          <h4>üë• –ì—Ä—É–ø–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏:</h4>
          
          <!-- –î–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è -->
          <div *ngIf="currentUser === 'teacher1'" class="teacher-controls">
            <div class="room-creation">
              <input type="text" 
                     [(ngModel)]="newRoomName" 
                     placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: –£—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏)"
                     class="room-input">
              <button class="action-btn conference" 
                      (click)="createGroupRoom()" 
                      [disabled]="!newRoomName || groupRoomActive">
                üè´ –°–æ–∑–¥–∞—Ç—å –≥—Ä—É–ø–ø–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É
              </button>
            </div>
            
            <div *ngIf="currentGroupRoom" class="active-room">
              <p><strong>–ê–∫—Ç–∏–≤–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞:</strong> {{ currentGroupRoom.name }}</p>
              <p><strong>–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:</strong> <code>{{ currentGroupRoom.id }}</code></p>
              <p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {{ groupParticipants.length }}/10</p>
              
              <!-- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ -->
              <div class="participants-management">
                <h5>üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏:</h5>
                <div class="participants-list">
                  <span *ngFor="let participant of groupParticipants" class="participant-tag">
                    {{ getParticipantName(participant) }}
                    <button *ngIf="participant !== currentUser" 
                            class="remove-participant-btn" 
                            (click)="removeParticipant(participant)"
                            title="–ò—Å–∫–ª—é—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞">
                      ‚úï
                    </button>
                  </span>
                </div>
                
                <!-- –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ -->
                <div class="invite-section">
                  <h5>‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</h5>
                  <div class="available-users">
                    <button *ngFor="let user of getAvailableUsersToInvite()" 
                            class="invite-user-btn"
                            (click)="inviteUserToRoom(user.id)"
                            [disabled]="groupParticipants.length >= 10">
                      {{ user.icon }} {{ user.name }}
                    </button>
                  </div>
                </div>
              </div>
              
              <div class="room-actions">
                <button class="action-btn stop" (click)="closeGroupRoom()">
                  üî¥ –ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É
                </button>
                <button class="action-btn" (click)="copyRoomInfo()">
                  üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã
                </button>
              </div>
            </div>
          </div>

          <!-- –î–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ -->
          <div *ngIf="currentUser !== 'teacher1'" class="student-controls">
            <div class="room-join">
              <input type="text" 
                     [(ngModel)]="roomCodeToJoin" 
                     placeholder="–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã"
                     class="room-input">
              <button class="action-btn conference" 
                      (click)="joinGroupRoom()" 
                      [disabled]="!roomCodeToJoin || groupRoomActive">
                üö™ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ
              </button>
            </div>
            
            <div *ngIf="currentGroupRoom" class="joined-room">
              <p><strong>–í –∫–æ–º–Ω–∞—Ç–µ:</strong> {{ currentGroupRoom.name }}</p>
              <p><strong>–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:</strong> {{ groupParticipants.length }}/10</p>
              <button class="action-btn stop" (click)="leaveGroupRoom()">
                üö™ –ü–æ–∫–∏–Ω—É—Ç—å –∫–æ–º–Ω–∞—Ç—É
              </button>
            </div>
          </div>

          <!-- –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç -->
          <div *ngIf="availableRooms.length > 0" class="available-rooms">
            <h5>üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã:</h5>
            <div *ngFor="let room of availableRooms" class="room-item">
              <span>{{ room.name }} ({{ room.participants }}/10)</span>
              <button class="action-btn small" 
                      (click)="quickJoinRoom(room.id)"
                      [disabled]="room.participants >= 10">
                –í–æ–π—Ç–∏
              </button>
            </div>
          </div>
        </div>
      </div>

      <div class="status">
        <h3>–°—Ç–∞—Ç—É—Å:</h3>
        <p>WebSocket: {{ wsConnected ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω' }}</p>
        <p>–í–∏–¥–µ–æ: {{ videoActive ? 'üìπ –ê–∫—Ç–∏–≤–Ω–æ' : 'üìµ –ù–µ–∞–∫—Ç–∏–≤–Ω–æ' }}</p>
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: {{ userRegistered ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç' }}</p>
        <p>Agora –∫–∞–Ω–∞–ª: {{ videoCallService.callActive ? 'üî¥ –ü–æ–¥–∫–ª—é—á–µ–Ω' : '‚ö™ –û—Ç–∫–ª—é—á–µ–Ω' }}</p>
        <p>–ö–∞–Ω–∞–ª: {{ videoCallService.channelName }}</p>
        <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID: {{ videoCallService.userId }}</p>
        <p>–£–¥–∞–ª—ë–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {{ remoteUsersCount }}</p>
        <p>–ì—Ä—É–ø–ø–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞: {{ currentGroupRoom ? '‚úÖ ' + currentGroupRoom.name : '‚ùå –ù–µ –≤ –∫–æ–º–Ω–∞—Ç–µ' }}</p>
      </div>
      
      <div class="instructions" *ngIf="currentUser">
        <h3>üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</h3>
        <div class="instruction-box">
                       <h4>üéØ –°—Ü–µ–Ω–∞—Ä–∏–π 1: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏</h4>
             <ol>
               <li>–û—Ç–∫—Ä–æ–π—Ç–µ <strong>2 –≤–∫–ª–∞–¥–∫–∏</strong> —Å —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π</li>
               <li>–í 1-–π –≤–∫–ª–∞–¥–∫–µ –≤—ã–±–µ—Ä–∏—Ç–µ <strong>"–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω"</strong></li>
               <li>–í–æ 2-–π –≤–∫–ª–∞–¥–∫–µ –≤—ã–±–µ—Ä–∏—Ç–µ <strong>"–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä"</strong></li>
               <li>–í 1-–π –≤–∫–ª–∞–¥–∫–µ –Ω–∞–∂–º–∏—Ç–µ <strong>"üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å –ü–µ—Ç—Ä—É"</strong></li>
               <li>–í–æ 2-–π –≤–∫–ª–∞–¥–∫–µ <strong>–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—ã–∑–æ–≤</strong></li>
               <li>–û–±–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞!</li>
             </ol>

             <h4>üë• –°—Ü–µ–Ω–∞—Ä–∏–π 2: –ì—Ä—É–ø–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ (Teams-like)</h4>
             <ol>
               <li>–û—Ç–∫—Ä–æ–π—Ç–µ <strong>4 –≤–∫–ª–∞–¥–∫–∏</strong> —Å —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π</li>
               <li><strong>–í–∫–ª–∞–¥–∫–∞ 1:</strong> –í—ã–±–µ—Ä–∏—Ç–µ "–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω" ‚Üí –°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É "–£—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏"</li>
               <li><strong>–í–∫–ª–∞–¥–∫–∞ 2:</strong> –í—ã–±–µ—Ä–∏—Ç–µ "–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä" ‚Üí –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã</li>
               <li><strong>–í–∫–ª–∞–¥–∫–∞ 3:</strong> –í—ã–±–µ—Ä–∏—Ç–µ "–°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è" ‚Üí –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã</li>
               <li><strong>–í–∫–ª–∞–¥–∫–∞ 4:</strong> –í—ã–±–µ—Ä–∏—Ç–µ "–°—Ç—É–¥–µ–Ω—Ç –ê–ª–∏—Å–∞" ‚Üí –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã</li>
               <li><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç:</strong></li>
               <ul>
                 <li>üè´ <strong>–£—á–∏—Ç–µ–ª—å</strong> –≤–∏–¥–∏—Ç –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤ —Å–µ—Ç–∫–µ 2x2</li>
                 <li>üìö <strong>–°—Ç—É–¥–µ–Ω—Ç—ã</strong> –≤–∏–¥—è—Ç —É—á–∏—Ç–µ–ª—è –∫—Ä—É–ø–Ω–æ + –¥—Ä—É–≥–∏—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å–ø—Ä–∞–≤–∞ (PiP)</li>
                 <li>üé• –í—Å–µ –≤–∏–¥—è—Ç —Å–µ–±—è –≤ –º–∞–ª–µ–Ω—å–∫–æ–º –æ–∫–Ω–µ —Å–ø—Ä–∞–≤–∞ –≤–Ω–∏–∑—É</li>
               </ul>
             </ol>

             <h4>‚ûï –°—Ü–µ–Ω–∞—Ä–∏–π 3: –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h4>
             <ol>
               <li>–°–æ–∑–¥–∞–π—Ç–µ –∫–æ–º–Ω–∞—Ç—É –∫–∞–∫ —É—á–∏—Ç–µ–ª—å</li>
               <li>–í —Å–µ–∫—Ü–∏–∏ "‚ûï –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤" –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤</li>
               <li>–î—Ä—É–≥–∏–µ –≤–∫–ª–∞–¥–∫–∏ –ø–æ–ª—É—á–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏</li>
               <li>–ü—Ä–∏–º–∏—Ç–µ/–æ—Ç–∫–ª–æ–Ω–∏—Ç–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è</li>
               <li>–£—á–∏—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π</li>
             </ol>
          
          <h4>–°—Ü–µ–Ω–∞—Ä–∏–π 2: –° –¥—Ä—É–≥–æ–≥–æ –Ω–æ—É—Ç–±—É–∫–∞</h4>
          <ol>
            <li>–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ <strong>API Gateway –∑–∞–ø—É—â–µ–Ω</strong> –Ω–∞ —ç—Ç–æ–º –∫–æ–º–ø—å—é—Ç–µ—Ä–µ</li>
            <li>–ù–∞ –≤—Ç–æ—Ä–æ–º –Ω–æ—É—Ç–±—É–∫–µ –æ—Ç–∫—Ä–æ–π—Ç–µ: <strong>http://{{ currentIP }}:4200/test-video</strong></li>
            <li>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –∫–∞–∂–¥–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ</li>
            <li>–ò–Ω–∏—Ü–∏–∏—Ä—É–π—Ç–µ –∑–≤–æ–Ω–æ–∫ –∫–∞–∫ –≤ —Å—Ü–µ–Ω–∞—Ä–∏–∏ 1</li>
          </ol>
          
          <div class="ip-info">
            <strong>üåê IP –∞–¥—Ä–µ—Å –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ –Ω–æ—É—Ç–±—É–∫–∞:</strong>
            <code>{{ currentIP }}</code>
            <button class="copy-btn" (click)="copyIP()">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
          </div>
        </div>
      </div>

      <!-- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞ -->
      <app-video-call 
        *ngIf="videoCallService.showVideoCallSubject.getValue()"
        [isFloatingMode]="false">
      </app-video-call>
    </div>
  `,
  styles: [`
    .test-container {
      padding: 20px;
      max-width: 800px;
      margin: 0 auto;
    }
    
    .user-section, .actions, .status {
      margin: 20px 0;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
    }
    
    .user-btn, .action-btn {
      margin: 5px;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
    }
    
    .user-btn.teacher {
      background: #3498db;
      color: white;
    }
    
    .user-btn.student {
      background: #2ecc71;
      color: white;
    }
    
    .action-btn {
      background: #e74c3c;
      color: white;
    }
    
    .action-btn.start {
      background: #27ae60;
    }
    
    .action-btn.stop {
      background: #e74c3c;
    }
    
    .action-btn:disabled {
      background: #bdc3c7;
      cursor: not-allowed;
      opacity: 0.5;
    }
    
    .user-btn:hover, .action-btn:hover {
      opacity: 0.8;
    }
    
    .current-user {
      background: #f8f9fa;
      padding: 10px;
      border-radius: 5px;
      margin: 10px 0;
    }
    
    .call-targets {
      margin: 10px 0;
    }
    
    .status p {
      margin: 5px 0;
      font-weight: bold;
    }
    
    .instructions {
      margin: 20px 0;
      padding: 15px;
      border: 2px solid #3498db;
      border-radius: 8px;
      background: #ecf0f1;
    }
    
    .instruction-box {
      background: white;
      padding: 15px;
      border-radius: 5px;
      margin: 10px 0;
    }
    
    .instruction-box h4 {
      color: #2c3e50;
      margin: 10px 0;
    }
    
    .instruction-box ol {
      margin: 10px 0;
      padding-left: 20px;
    }
    
    .instruction-box li {
      margin: 5px 0;
      line-height: 1.5;
    }
    
    .ip-info {
      background: #f8f9fa;
      padding: 10px;
      border-radius: 5px;
      margin: 10px 0;
      border-left: 4px solid #27ae60;
    }
    
    .ip-info code {
      background: #2c3e50;
      color: white;
      padding: 5px 10px;
      border-radius: 3px;
      font-family: 'Courier New', monospace;
      margin: 0 10px;
    }
    
    .copy-btn {
      background: #27ae60;
      color: white;
      border: none;
      padding: 5px 10px;
      border-radius: 3px;
      cursor: pointer;
      margin-left: 10px;
    }

    /* –ì—Ä—É–ø–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏ */
    .action-section {
      margin: 15px 0;
      padding: 15px;
      border: 1px solid #ddd;
      border-radius: 8px;
      background: #f9f9f9;
    }

    .group-section {
      border-color: #3498db;
      background: #ecf0f1;
    }

    .action-section h4 {
      margin: 0 0 15px 0;
      color: #2c3e50;
      font-size: 16px;
    }

    .room-input {
      padding: 8px 12px;
      border: 1px solid #bdc3c7;
      border-radius: 4px;
      margin-right: 10px;
      width: 250px;
      font-size: 14px;
    }

    .action-btn.conference {
      background: #3498db;
    }

    .action-btn.small {
      padding: 5px 10px;
      font-size: 12px;
      margin-left: 10px;
    }

    .active-room, .joined-room {
      background: #d5f4e6;
      padding: 10px;
      border-radius: 5px;
      margin: 10px 0;
      border-left: 4px solid #27ae60;
    }

    .available-rooms {
      margin-top: 15px;
    }

    .room-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 8px;
      background: white;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin: 5px 0;
    }

    .room-creation, .room-join {
      margin-bottom: 15px;
    }

    /* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏ */
    .participants-management {
      margin: 15px 0;
      padding: 10px;
      background: #f8f9fa;
      border-radius: 5px;
    }

    .participants-list {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin: 10px 0;
    }

    .participant-tag {
      display: inline-flex;
      align-items: center;
      background: #007bff;
      color: white;
      padding: 4px 8px;
      border-radius: 15px;
      font-size: 12px;
      gap: 5px;
    }

    .remove-participant-btn {
      background: none;
      border: none;
      color: white;
      cursor: pointer;
      padding: 0;
      width: 16px;
      height: 16px;
      border-radius: 50%;
      font-size: 10px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .remove-participant-btn:hover {
      background: rgba(255, 255, 255, 0.2);
    }

    .invite-section {
      margin-top: 15px;
    }

    .available-users {
      display: flex;
      flex-wrap: wrap;
      gap: 8px;
      margin-top: 8px;
    }

    .invite-user-btn {
      background: #28a745;
      color: white;
      border: none;
      padding: 6px 12px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 12px;
      transition: background 0.2s;
    }

    .invite-user-btn:hover:not(:disabled) {
      background: #218838;
    }

    .invite-user-btn:disabled {
      background: #6c757d;
      cursor: not-allowed;
    }

    .room-actions {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }
  `]
})
export class TestVideoCallComponent implements OnInit {
  currentUser: string = '';
  currentUserName: string = '';
  wsConnected: boolean = false;
  videoActive: boolean = false;
  userRegistered: boolean = false;
  remoteUsersCount: number = 0;
  currentIP: string = 'localhost';

  // –ì—Ä—É–ø–ø–æ–≤—ã–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏
  newRoomName: string = '';
  roomCodeToJoin: string = '';
  currentGroupRoom: GroupRoom | null = null;
  groupRoomActive: boolean = false;
  groupParticipants: string[] = [];
  availableRooms: AvailableRoom[] = [];

  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  private allUsers = [
    { id: 'teacher1', name: '–£—á–∏—Ç–µ–ª—å –ò–≤–∞–Ω', icon: 'üë®‚Äçüè´' },
    { id: 'student1', name: '–°—Ç—É–¥–µ–Ω—Ç –ü–µ—Ç—Ä', icon: 'üë®‚Äçüéì' },
    { id: 'student2', name: '–°—Ç—É–¥–µ–Ω—Ç –ú–∞—Ä–∏—è', icon: 'üë©‚Äçüéì' },
    { id: 'student3', name: '–°—Ç—É–¥–µ–Ω—Ç –ê–ª–∏—Å–∞', icon: 'üë©‚Äçüéì' },
    { id: 'student4', name: '–°—Ç—É–¥–µ–Ω—Ç –ù–∏–∫–∏—Ç–∞', icon: 'üë®‚Äçüéì' }
  ];

  constructor(
    public videoCallService: VideoCallService,
    private wsService: WebSocketService
  ) {}

  ngOnInit() {
    console.log('üß™ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
    
    // –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP –∞–¥—Ä–µ—Å
    this.getCurrentIP();
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–µ–æ
    this.videoCallService.showVideoCall$.subscribe(active => {
      this.videoActive = active;
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    setInterval(() => {
      if (this.videoCallService.agoraClient) {
        // –ü–æ–ª—É—á–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ Agora –∫–ª–∏–µ–Ω—Ç–∞
        this.remoteUsersCount = Object.keys(this.videoCallService.remoteUsers || {}).length;
      }
    }, 1000);

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket
    this.wsService.listen('connect').subscribe(() => {
      this.wsConnected = true;
      console.log('‚úÖ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω!');
    });

    this.wsService.listen('disconnect').subscribe(() => {
      this.wsConnected = false;
      this.userRegistered = false;
      console.log('‚ùå WebSocket –æ—Ç–∫–ª—é—á–µ–Ω!');
    });

    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è WebSocket
    this.wsService.listen('registered').subscribe(() => {
      this.userRegistered = true;
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ WebSocket');
    });

    this.wsService.listen('call_invite').subscribe((data: any) => {
      console.log(`üìû –í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤ –æ—Ç ${data.from}`);
      const accept = confirm(`üìû –í—Ö–æ–¥—è—â–∏–π –≤—ã–∑–æ–≤ –æ—Ç ${data.from}. –ü—Ä–∏–Ω—è—Ç—å?`);
      if (accept) {
        this.wsService.acceptCall(data.from, data.to);
        this.startVideoCall();
      } else {
        this.wsService.rejectCall(data.from, data.to);
      }
    });

    this.wsService.listen('call_accept').subscribe((data: any) => {
      console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${data.from} –ø—Ä–∏–Ω—è–ª –≤—ã–∑–æ–≤`);
      this.startVideoCall();
    });

    this.wsService.listen('call_reject').subscribe((data: any) => {
      alert(`‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª –≤—ã–∑–æ–≤`);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π
    this.wsService.listen('room_created').subscribe((data: any) => {
      console.log('üè´ –°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞:', data.room);
      this.updateAvailableRooms();
    });

    this.wsService.listen('room_joined').subscribe((data: any) => {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ:', data.room);
      this.currentGroupRoom = data.room;
      this.groupRoomActive = true;
      this.groupParticipants = data.room.participants;
      
      // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π –∫–∞–Ω–∞–ª Agora
      this.videoCallService.channelName = `group_${data.room.id}`;
      console.log(`üé• –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è ${this.currentUserName}...`);
      
      // –ï—Å–ª–∏ —É–∂–µ –≤ –≤–∏–¥–µ–æ –∫–∞–Ω–∞–ª–µ - –≤—ã—Ö–æ–¥–∏–º —Å–Ω–∞—á–∞–ª–∞, –ø–æ—Ç–æ–º –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –Ω–æ–≤–æ–º—É
      if (this.videoCallService.callActive) {
        this.videoCallService.leaveChannel().then(() => {
          this.startVideoCall(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≤–∏–¥–µ–æ
        });
      } else {
        this.startVideoCall(); // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≤–∏–¥–µ–æ
      }
      
      this.roomCodeToJoin = '';
      alert(`‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –∫–æ–º–Ω–∞—Ç–µ: ${data.room.name}`);
    });

    this.wsService.listen('room_join_failed').subscribe((data: any) => {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ:', data.reason);
      alert(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–Ω–∞—Ç–µ: ${data.reason}`);
    });

    this.wsService.listen('room_participant_joined').subscribe((data: any) => {
      console.log('üë§ –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è:', data.participant);
      if (this.currentGroupRoom) {
        this.groupParticipants.push(data.participant);
        console.log(`üë• –í –∫–æ–º–Ω–∞—Ç–µ —Ç–µ–ø–µ—Ä—å ${this.groupParticipants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`);
      }
    });

    this.wsService.listen('room_participant_left').subscribe((data: any) => {
      console.log('üë§ –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª –∫–æ–º–Ω–∞—Ç—É:', data.participant);
      if (this.currentGroupRoom) {
        this.groupParticipants = this.groupParticipants.filter(p => p !== data.participant);
        console.log(`üë• –í –∫–æ–º–Ω–∞—Ç–µ –æ—Å—Ç–∞–ª–æ—Å—å ${this.groupParticipants.length} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤`);
      }
    });

    this.wsService.listen('room_closed').subscribe((data: any) => {
      console.log('üî¥ –ö–æ–º–Ω–∞—Ç–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞:', data.roomId);
      if (this.currentGroupRoom && this.currentGroupRoom.id === data.roomId) {
        this.currentGroupRoom = null;
        this.groupRoomActive = false;
        this.groupParticipants = [];
        alert('üî¥ –ö–æ–º–Ω–∞—Ç–∞ –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º');
      }
      this.updateAvailableRooms();
    });

    this.wsService.listen('available_rooms').subscribe((data: any) => {
      console.log('üìã –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç:', data.rooms);
      this.availableRooms = data.rooms;
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π
    this.wsService.listen('room_invitation').subscribe((data: any) => {
      console.log('üìß –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É:', data);
      const accept = confirm(`üìß ${data.inviterName} –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤–∞—Å –≤ –≥—Ä—É–ø–ø–æ–≤—É—é –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é "${data.roomName}"\n\n–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ?`);
      
      if (accept) {
        this.roomCodeToJoin = data.roomId;
        this.joinGroupRoom();
      } else {
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        this.wsService.sendMessage('invitation_declined', {
          roomId: data.roomId,
          inviterUserId: data.inviterUserId,
          declinedUserId: this.currentUser
        });
      }
    });

    this.wsService.listen('invitation_accepted').subscribe((data: any) => {
      console.log('‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ:', data);
      alert(`‚úÖ ${this.getParticipantName(data.acceptedUserId)} –ø—Ä–∏–Ω—è–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ!`);
    });

    this.wsService.listen('invitation_declined').subscribe((data: any) => {
      console.log('‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ:', data);
      alert(`‚ùå ${this.getParticipantName(data.declinedUserId)} –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ`);
    });

    this.wsService.listen('removed_from_room').subscribe((data: any) => {
      console.log('üö´ –í–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã:', data);
      if (this.currentGroupRoom && this.currentGroupRoom.id === data.roomId) {
        this.currentGroupRoom = null;
        this.groupRoomActive = false;
        this.groupParticipants = [];
        alert('üö´ –í–∞—Å –∏—Å–∫–ª—é—á–∏–ª–∏ –∏–∑ –≥—Ä—É–ø–ø–æ–≤–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏');
      }
    });

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç
    setTimeout(() => {
      this.updateAvailableRooms();
    }, 1000);
  }

  setUser(userId: string, userName: string) {
    this.currentUser = userId;
    this.currentUserName = userName;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–µ—Ä–≤–∏—Å–µ
    this.videoCallService.setLessonData('test-lesson-123', userId);
    
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤ WebSocket
    this.wsService.registerUser(userId);
    
    console.log(`üë§ –í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userName} (${userId})`);
  }

  startVideoCall() {
    console.log('üé• –ó–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞');
    this.videoCallService.startVideoCall();
  }

  stopVideoCall() {
    console.log('üî¥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ –∑–≤–æ–Ω–∫–∞');
    this.videoCallService.stopVideoCall();
    // –¢–∞–∫–∂–µ –æ—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç Agora –∫–∞–Ω–∞–ª–∞
    this.videoCallService.leaveChannel();
  }

  callUser(targetUserId: string) {
    if (!this.currentUser) {
      alert('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      return;
    }
    
    console.log(`üìû –ó–≤–æ–Ω–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${targetUserId}`);
    this.wsService.initiateCall(targetUserId, this.currentUser);
  }

  getCurrentIP() {
    // –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–π IP (—Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ –≤–æ –≤—Å–µ—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö)
    try {
      const connection = new RTCPeerConnection({ iceServers: [] });
      connection.createDataChannel('');
      connection.createOffer().then(offer => connection.setLocalDescription(offer));
      
      connection.onicecandidate = (event) => {
        if (event.candidate) {
          const candidate = event.candidate.candidate;
          const ipMatch = candidate.match(/(\d+\.\d+\.\d+\.\d+)/);
          if (ipMatch && ipMatch[1] !== '127.0.0.1') {
            this.currentIP = ipMatch[1];
            connection.close();
          }
        }
      };
    } catch (error) {
      console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP –∞–¥—Ä–µ—Å:', error);
      // –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π IP
      this.currentIP = '192.168.1.152'; // –í–∞—à —Ä–µ–∞–ª—å–Ω—ã–π IP
    }
  }

  copyIP() {
    const fullUrl = `http://${this.currentIP}:4200/test-video`;
    navigator.clipboard.writeText(fullUrl).then(() => {
      alert('üìã URL —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }).catch(() => {
      alert(`üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: ${fullUrl}`);
    });
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π
  createGroupRoom() {
    if (!this.newRoomName.trim()) {
      alert('‚ùå –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã');
      return;
    }

    const roomId = this.generateRoomId();
    const room: GroupRoom = {
      id: roomId,
      name: this.newRoomName.trim(),
      creator: this.currentUser,
      participants: [this.currentUser],
      maxParticipants: 10,
      createdAt: new Date()
    };

    this.currentGroupRoom = room;
    this.groupRoomActive = true;
    this.groupParticipants = [this.currentUser];
    
    // –ú–µ–Ω—è–µ–º –∫–∞–Ω–∞–ª Agora –Ω–∞ –≥—Ä—É–ø–ø–æ–≤–æ–π
    this.videoCallService.channelName = `group_${roomId}`;
    
    // –£–≤–µ–¥–æ–º–ª—è–µ–º —á–µ—Ä–µ–∑ WebSocket –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
    this.wsService.sendMessage('room_created', {
      room: room,
      creator: this.currentUser
    });

    console.log(`üè´ –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞: ${room.name} (${roomId})`);
    console.log(`üé• –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è...`);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≤–∏–¥–µ–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
    this.startVideoCall();
    
    alert(`‚úÖ –ö–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${room.name}\n–ö–æ–¥: ${roomId}`);
    
    this.newRoomName = '';
  }

  joinGroupRoom() {
    if (!this.roomCodeToJoin.trim()) {
      alert('‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã');
      return;
    }

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–Ω–∞—Ç–µ —á–µ—Ä–µ–∑ WebSocket
    this.wsService.sendMessage('join_room_request', {
      roomId: this.roomCodeToJoin.trim(),
      userId: this.currentUser,
      userName: this.currentUserName
    });

    console.log(`üö™ –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ: ${this.roomCodeToJoin}`);
  }

  quickJoinRoom(roomId: string) {
    this.roomCodeToJoin = roomId;
    this.joinGroupRoom();
  }

  leaveGroupRoom() {
    if (!this.currentGroupRoom) return;

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≤—ã—Ö–æ–¥–µ –∏–∑ –∫–æ–º–Ω–∞—Ç—ã
    this.wsService.sendMessage('leave_room', {
      roomId: this.currentGroupRoom.id,
      userId: this.currentUser
    });

    this.currentGroupRoom = null;
    this.groupRoomActive = false;
    this.groupParticipants = [];
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π –∫–∞–Ω–∞–ª
    this.videoCallService.channelName = 'test_channel_123';
    
    console.log('üö™ –ü–æ–∫–∏–Ω—É–ª–∏ –≥—Ä—É–ø–ø–æ–≤—É—é –∫–æ–º–Ω–∞—Ç—É');
  }

  closeGroupRoom() {
    if (!this.currentGroupRoom) return;

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∫–æ–º–Ω–∞—Ç—ã
    this.wsService.sendMessage('room_closed', {
      roomId: this.currentGroupRoom.id,
      creator: this.currentUser
    });

    this.currentGroupRoom = null;
    this.groupRoomActive = false;
    this.groupParticipants = [];
    
    console.log('üî¥ –ì—Ä—É–ø–ø–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞');
    alert('üî¥ –ö–æ–º–Ω–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞');
  }

  private generateRoomId(): string {
    return Math.random().toString(36).substring(2, 8).toUpperCase();
  }

  private updateAvailableRooms() {
    this.wsService.sendMessage('get_available_rooms', {});
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏
  getParticipantName(userId: string): string {
    const user = this.allUsers.find(u => u.id === userId);
    return user ? user.name : userId;
  }

  getAvailableUsersToInvite() {
    return this.allUsers.filter(user => 
      user.id !== this.currentUser && 
      !this.groupParticipants.includes(user.id)
    );
  }

  inviteUserToRoom(userId: string) {
    if (!this.currentGroupRoom) return;

    console.log(`üìß –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ –∫–æ–º–Ω–∞—Ç—É ${this.currentGroupRoom.id}`);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —á–µ—Ä–µ–∑ WebSocket
    this.wsService.sendMessage('invite_to_room', {
      roomId: this.currentGroupRoom.id,
      invitedUserId: userId,
      inviterUserId: this.currentUser,
      inviterName: this.currentUserName,
      roomName: this.currentGroupRoom.name
    });

    alert(`üìß –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${this.getParticipantName(userId)}`);
  }

  removeParticipant(userId: string) {
    if (!this.currentGroupRoom) return;

    const confirm = window.confirm(`–ò—Å–∫–ª—é—á–∏—Ç—å ${this.getParticipantName(userId)} –∏–∑ –∫–æ–º–Ω–∞—Ç—ã?`);
    if (!confirm) return;

    console.log(`üö´ –ò—Å–∫–ª—é—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${userId} –∏–∑ –∫–æ–º–Ω–∞—Ç—ã ${this.currentGroupRoom.id}`);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏—Å–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ WebSocket
    this.wsService.sendMessage('remove_from_room', {
      roomId: this.currentGroupRoom.id,
      removedUserId: userId,
      removerUserId: this.currentUser
    });
  }

  copyRoomInfo() {
    if (!this.currentGroupRoom) return;

    const roomInfo = `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –≥—Ä—É–ø–ø–æ–≤–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏!\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${this.currentGroupRoom.name}\n–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã: ${this.currentGroupRoom.id}\n\n–°—Å—ã–ª–∫–∞: http://${this.currentIP}:4200/test-video`;
    
    navigator.clipboard.writeText(roomInfo).then(() => {
      alert('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–Ω–∞—Ç–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
    }).catch(() => {
      alert(`üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤—Ä—É—á–Ω—É—é:\n\n${roomInfo}`);
    });
  }
}
