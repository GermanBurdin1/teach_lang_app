name: frontend-ci-cd
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install deps (clean)
        run: npm ci

      # Quality gates (блокирующие) - исключаем указанные папки
      - name: Lint (ESLint/Prettier) - exclude specified folders
        run: npm run lint:ci

      - name: Unit tests (Jasmine/Karma) - exclude specified folders  
        run: npm run test:ci

      - name: Install Playwright (browsers)
        run: npx playwright install --with-deps

      - name: E2E tests (Playwright headless)
        run: npm run e2e

      - name: Remove excluded directories before build
        run: |
          # Удаляем папки только перед билдом для production
          rm -rf public/
          rm -rf src/app/classroom/lesson-material/tabs/
          rm -rf src/app/features/landing/
          rm -rf src/app/features/marathons/
          rm -rf src/app/features/materials/
          rm -rf src/app/features/tariffs/
          rm -rf src/app/features/users/
          rm -rf src/app/shared/components/calendar/
          rm -rf src/app/shared/components/schedule/
          rm -rf src/app/test-video-call/

      - name: Build (Angular prod w/ budgets)
        run: npm run build

      - name: Create filtered build artifact (exclude specified folders)
        run: |
          # Создаем временную папку для фильтрованного билда
          mkdir -p filtered-dist
          
          # Копируем всё, кроме исключенных папок
          rsync -av \
            --exclude="**/tabs/" \
            --exclude="**/landing/" \
            --exclude="**/marathons/" \
            --exclude="**/materials/" \
            --exclude="**/tariffs/" \
            --exclude="**/calendar/" \
            --exclude="**/schedule/" \
            --exclude="**/test-video-call/" \
            --exclude="public/" \
            dist/**/browser/ filtered-dist/

      - name: Upload build artifact (without excluded folders)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: filtered-dist/

      - name: Deploy to OVH via rsync (only master) - with exclusions
        if: github.ref == 'refs/heads/master'
        env:
          OVH_HOST: ${{ secrets.OVH_HOST }}
          OVH_USER: ${{ secrets.OVH_USER }}
          SSH_KEY:  ${{ secrets.OVH_SSH_KEY }}
          REMOTE_DIR: /www/wwwroot/135.125.107.45
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_deploy && chmod 600 ~/.ssh/id_deploy
          ssh-keyscan -p "${OVH_PORT:-22}" "$OVH_HOST" >> ~/.ssh/known_hosts
          
          # Деплоим отфильтрованную сборку (исключенные папки уже удалены)
          rsync -avz --delete \
            -e "ssh -i ~/.ssh/id_deploy -p ${OVH_PORT:-22}" \
            filtered-dist/ "${OVH_USER}@${OVH_HOST}:${REMOTE_DIR}/"
            
          # если менял конфиг, перезагрузи Nginx
          ssh -i ~/.ssh/id_deploy -p "${OVH_PORT:-22}" "${OVH_USER}@${OVH_HOST}" \
            "sudo nginx -t && sudo systemctl reload nginx || true"
