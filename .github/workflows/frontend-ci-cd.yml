name: frontend-ci-cd
on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # –ü–æ–ª—É—á–∞–µ–º –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # –ö—ç—à–∏—Ä—É–µ–º node_modules –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install deps (clean)
        run: npm ci

      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Ç–µ—Å—Ç–æ–≤
      - name: Check all test requirements
        id: check-all-tests
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # –î–ª—è PR —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –±–∞–∑–æ–≤–æ–π –≤–µ—Ç–∫–æ–π
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
            HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          else
            # –î–ª—è push —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –∫–æ–º–º–∏—Ç–æ–º
            BASE_SHA="${{ github.event.before }}"
            HEAD_SHA="${{ github.event.after }}"
          fi
          
          # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
          CHANGED_FILES=$(git diff --name-only $BASE_SHA $HEAD_SHA)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Unit —Ç–µ—Å—Ç–∞—Ö
          UNIT_TEST_CHANGES=$(echo "$CHANGED_FILES" | grep -E '\.(spec|test)\.(ts|js)$' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ E2E —Ç–µ—Å—Ç–∞—Ö
          E2E_TEST_CHANGES=$(echo "$CHANGED_FILES" | grep -E 'e2e/|playwright|\.github/workflows/' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö (—Ç—Ä–µ–±—É—é—Ç unit —Ç–µ—Å—Ç–æ–≤)
          SRC_CHANGES=$(echo "$CHANGED_FILES" | grep -E '^src/' | grep -v -E '\.(spec|test)\.(ts|js)$' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö (—Ç—Ä–µ–±—É—é—Ç E2E)
          CRITICAL_CHANGES=$(echo "$CHANGED_FILES" | grep -E 'src/app/(auth|features|shared)/' | grep -v -E '\.(spec|test)\.(ts|js)$' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤
          TEST_CONFIG_CHANGES=$(echo "$CHANGED_FILES" | grep -E '(karma|jasmine|test|spec|playwright|jest)\.(json|js|ts|conf)$|\.github/workflows/' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–∞—Ö (–µ—Å–ª–∏ –µ—Å—Ç—å)
          INTEGRATION_TEST_CHANGES=$(echo "$CHANGED_FILES" | grep -E '(integration|api|service).*\.(spec|test)\.(ts|js)$' | wc -l)
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–µ—Ä–≤–∏—Å–∞—Ö (—Ç—Ä–µ–±—É—é—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤)
          SERVICE_CHANGES=$(echo "$CHANGED_FILES" | grep -E 'src/app/services/' | grep -v -E '\.(spec|test)\.(ts|js)$' | wc -l)
          
          # –õ–æ–≥–∏–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
          RUN_UNIT_TESTS=$([ $SRC_CHANGES -gt 0 -o $UNIT_TEST_CHANGES -gt 0 -o $TEST_CONFIG_CHANGES -gt 0 ] && echo 'true' || echo 'false')
          RUN_E2E_TESTS=$([ $E2E_TEST_CHANGES -gt 0 -o $CRITICAL_CHANGES -gt 0 -o $TEST_CONFIG_CHANGES -gt 0 ] && echo 'true' || echo 'false')
          RUN_INTEGRATION_TESTS=$([ $INTEGRATION_TEST_CHANGES -gt 0 -o $SERVICE_CHANGES -gt 0 -o $TEST_CONFIG_CHANGES -gt 0 ] && echo 'true' || echo 'false')
          
          # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
          echo "unit-test-changes=$UNIT_TEST_CHANGES" >> $GITHUB_OUTPUT
          echo "e2e-test-changes=$E2E_TEST_CHANGES" >> $GITHUB_OUTPUT
          echo "integration-test-changes=$INTEGRATION_TEST_CHANGES" >> $GITHUB_OUTPUT
          echo "src-changes=$SRC_CHANGES" >> $GITHUB_OUTPUT
          echo "critical-changes=$CRITICAL_CHANGES" >> $GITHUB_OUTPUT
          echo "service-changes=$SERVICE_CHANGES" >> $GITHUB_OUTPUT
          echo "test-config-changes=$TEST_CONFIG_CHANGES" >> $GITHUB_OUTPUT
          echo "run-unit-tests=$RUN_UNIT_TESTS" >> $GITHUB_OUTPUT
          echo "run-e2e-tests=$RUN_E2E_TESTS" >> $GITHUB_OUTPUT
          echo "run-integration-tests=$RUN_INTEGRATION_TESTS" >> $GITHUB_OUTPUT
          
          echo "üîç === –ê–ù–ê–õ–ò–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô ==="
          echo "üìù Unit test files changed: $UNIT_TEST_CHANGES"
          echo "üé≠ E2E test files changed: $E2E_TEST_CHANGES"
          echo "üîó Integration test files changed: $INTEGRATION_TEST_CHANGES"
          echo "üìÅ Source files changed: $SRC_CHANGES"
          echo "‚ö° Critical components changed: $CRITICAL_CHANGES"
          echo "üîß Service files changed: $SERVICE_CHANGES"
          echo "‚öôÔ∏è Test config files changed: $TEST_CONFIG_CHANGES"
          echo ""
          echo "üöÄ === –†–ï–®–ï–ù–ò–ï ==="
          echo "üß™ Unit tests: $([ $RUN_UNIT_TESTS = 'true' ] && echo 'RUN' || echo 'SKIP')"
          echo "üé≠ E2E tests: $([ $RUN_E2E_TESTS = 'true' ] && echo 'RUN' || echo 'SKIP')"
          echo "üîó Integration tests: $([ $RUN_INTEGRATION_TESTS = 'true' ] && echo 'RUN' || echo 'SKIP')"
          echo "========================"

      # Quality gates (–±–ª–æ–∫–∏—Ä—É—é—â–∏–µ) - –∏—Å–∫–ª—é—á–∞–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–µ –ø–∞–ø–∫–∏
      - name: Lint (ESLint/Prettier) - exclude specified folders
        run: npm run lint:ci

      - name: Unit tests (Jasmine/Karma) - exclude specified folders  
        if: steps.check-all-tests.outputs.run-unit-tests == 'true'
        run: npm run test:ci

      - name: Skip unit tests - no relevant changes
        if: steps.check-all-tests.outputs.run-unit-tests == 'false'
        run: echo "‚è≠Ô∏è Skipping unit tests - no source code or test changes detected"

      # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ)
      - name: Integration tests (if configured)
        if: steps.check-all-tests.outputs.run-integration-tests == 'true'
        run: |
          if npm run test:integration --if-present; then
            echo "‚úÖ Integration tests passed"
          else
            echo "‚ÑπÔ∏è No integration tests configured"
          fi

      - name: Skip integration tests - no service changes
        if: steps.check-all-tests.outputs.run-integration-tests == 'false'
        run: echo "‚è≠Ô∏è Skipping integration tests - no service files or integration test changes detected"

      # E2E —Ç–µ—Å—Ç—ã —Å —É–º–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π Playwright
      - name: Install Playwright (browsers) - only when needed
        if: steps.check-all-tests.outputs.run-e2e-tests == 'true'
        run: |
          echo "üé≠ Installing Playwright browsers for E2E tests..."
          npx playwright install --with-deps
          echo "‚úÖ Playwright installation completed"

      - name: Prepare E2E environment
        if: steps.check-all-tests.outputs.run-e2e-tests == 'true'
        run: |
          echo "üßπ Cleaning excluded directories for E2E tests..."
          # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫–∏ –ø–µ—Ä–µ–¥ E2E —Ç–µ—Å—Ç–∞–º–∏ –∏ –±–∏–ª–¥–æ–º –¥–ª—è production
          rm -rf public/
          rm -rf src/app/classroom/lesson-material/tabs/
          rm -rf src/app/features/landing/
          rm -rf src/app/features/marathons/
          rm -rf src/app/features/materials/
          rm -rf src/app/features/tariffs/
          rm -rf src/app/features/users/
          rm -rf src/app/shared/components/schedule/
          rm -rf src/app/test-video-call/
          echo "‚úÖ Environment prepared for E2E tests"

      - name: E2E tests (Playwright headless)
        if: steps.check-all-tests.outputs.run-e2e-tests == 'true'
        run: |
          echo "üé≠ Running E2E tests..."
          npm run e2e
          echo "‚úÖ E2E tests completed"

      - name: Skip E2E tests - no relevant changes
        if: steps.check-all-tests.outputs.run-e2e-tests == 'false'
        run: echo "‚è≠Ô∏è Skipping E2E tests - no E2E files, critical components or test config changes detected"

      # –ö—ç—à–∏—Ä—É–µ–º Angular build –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
      - name: Cache Angular build
        uses: actions/cache@v3
        with:
          path: |
            .angular/cache
            dist/
          key: ${{ runner.os }}-angular-${{ hashFiles('**/package-lock.json', '**/angular.json', '**/tsconfig.json') }}
          restore-keys: |
            ${{ runner.os }}-angular-

      - name: Build (Angular prod w/ budgets)
        run: npm run build --configuration=production

      - name: Create filtered build artifact (exclude specified folders)
        run: |
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–∏–ª–¥–∞
          mkdir -p filtered-dist
          
          # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å—ë, –∫—Ä–æ–º–µ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
          rsync -av \
            --exclude="**/tabs/" \
            --exclude="**/landing/" \
            --exclude="**/marathons/" \
            --exclude="**/materials/" \
            --exclude="**/tariffs/" \
            --exclude="**/calendar/" \
            --exclude="**/schedule/" \
            --exclude="**/test-video-call/" \
            --exclude="public/" \
            dist/**/browser/ filtered-dist/

      - name: Upload build artifact (without excluded folders)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: filtered-dist/

      - name: Deploy to OVH via rsync (only master) - with exclusions
        if: github.ref == 'refs/heads/master'
        env:
          OVH_HOST: ${{ secrets.OVH_HOST }}
          OVH_USER: ${{ secrets.OVH_USER }}
          SSH_KEY:  ${{ secrets.OVH_SSH_KEY }}
          REMOTE_DIR: /www/wwwroot/135.125.107.45
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_deploy
          chmod 600 ~/.ssh/id_deploy
          ssh-keyscan -p "${OVH_PORT:-22}" "$OVH_HOST" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          # –û—Ç–ª–∞–¥–∫–∞ SSH –∫–ª—é—á–∞
          echo "=== SSH Key Debug ==="
          echo "SSH key file exists: $(test -f ~/.ssh/id_deploy && echo 'YES' || echo 'NO')"
          echo "SSH key permissions: $(ls -la ~/.ssh/id_deploy)"
          echo "SSH key content (first 50 chars): $(head -c 50 ~/.ssh/id_deploy)"
          echo "SSH key type: $(head -c 20 ~/.ssh/id_deploy)"
          echo "===================="
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
          echo "Testing SSH connection..."
          ssh -i ~/.ssh/id_deploy -p "${OVH_PORT:-22}" -o ConnectTimeout=10 -o StrictHostKeyChecking=no -v "${OVH_USER}@${OVH_HOST}" "echo 'SSH connection successful'" 2>&1 || echo "SSH connection failed"
          
          # –î–µ–ø–ª–æ–∏–º –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—É—é —Å–±–æ—Ä–∫—É (–∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω—ã)
          rsync -avz \
          --delete \
          --exclude='.user.ini' \
          --no-perms --omit-dir-times \
          -e "ssh -i ~/.ssh/id_deploy -p ${OVH_PORT:-22}" \
          filtered-dist/ "${OVH_USER}@${OVH_HOST}:${REMOTE_DIR}/"
            
          # –µ—Å–ª–∏ –º–µ–Ω—è–ª –∫–æ–Ω—Ñ–∏–≥, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏ Nginx
          ssh -i ~/.ssh/id_deploy -p "${OVH_PORT:-22}" "${OVH_USER}@${OVH_HOST}" \
            "sudo nginx -t && sudo systemctl reload nginx || true"
